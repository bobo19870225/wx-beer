"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerAuth = exports.Auth = exports.generateAuthInstance = exports.LoginState = void 0;
var oauth_1 = require("@cloudbase/oauth");
var adapter_1 = require("./adapter");
var utilities_1 = require("./utilities");
var COMPONENT_NAME = 'auth';
var EVENTS = {
    LOGIN_STATE_CHANGED: 'loginStateChanged',
};
var eventBus = new utilities_1.CloudbaseEventEmitter();
var User = (function () {
    function User(options) {
        var cache = options.cache, oauthInstance = options.oauthInstance;
        this.cache = cache;
        this.oauthInstance = oauthInstance;
        this.setUserInfo();
    }
    User.prototype.checkLocalInfo = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.uid = this.getLocalUserInfo('uid');
                this.gender = this.getLocalUserInfo('gender');
                this.picture = this.getLocalUserInfo('picture');
                this.email = this.getLocalUserInfo('email');
                this.emailVerified = this.getLocalUserInfo('email_verified');
                this.phoneNumber = this.getLocalUserInfo('phone_number');
                this.username = this.getLocalUserInfo('username');
                this.name = this.getLocalUserInfo('name');
                this.birthdate = this.getLocalUserInfo('birthdate');
                this.zoneinfo = this.getLocalUserInfo('zoneinfo');
                this.locale = this.getLocalUserInfo('locale');
                this.sub = this.getLocalUserInfo('sub');
                this.createdFrom = this.getLocalUserInfo('created_from');
                this.providers = this.getLocalUserInfo('providers');
                return [2];
            });
        });
    };
    User.prototype.checkLocalInfoAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _a = this;
                        return [4, this.getLocalUserInfoAsync('uid')];
                    case 1:
                        _a.uid = _e.sent();
                        _b = this;
                        return [4, this.getLocalUserInfoAsync('gender')];
                    case 2:
                        _b.gender = _e.sent();
                        this.picture = this.getLocalUserInfo('picture');
                        _c = this;
                        return [4, this.getLocalUserInfoAsync('email')];
                    case 3:
                        _c.email = _e.sent();
                        this.emailVerified = this.getLocalUserInfo('email_verified');
                        this.phoneNumber = this.getLocalUserInfo('phone_number');
                        _d = this;
                        return [4, this.getLocalUserInfoAsync('username')];
                    case 4:
                        _d.username = _e.sent();
                        this.name = this.getLocalUserInfo('name');
                        this.birthdate = this.getLocalUserInfo('birthdate');
                        this.zoneinfo = this.getLocalUserInfo('zoneinfo');
                        this.locale = this.getLocalUserInfo('locale');
                        this.sub = this.getLocalUserInfo('sub');
                        this.createdFrom = this.getLocalUserInfo('created_from');
                        this.providers = this.getLocalUserInfo('providers');
                        return [2];
                }
            });
        });
    };
    User.prototype.update = function (userInfo) {
        return __awaiter(this, void 0, void 0, function () {
            var newUserInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.setUserProfile(__assign({}, userInfo))];
                    case 1:
                        newUserInfo = _a.sent();
                        this.setLocalUserInfo(newUserInfo);
                        return [2];
                }
            });
        });
    };
    User.prototype.updateUserBasicInfo = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.updateUserBasicInfo(__assign({}, params))];
                    case 1:
                        _a.sent();
                        this.setLocalUserInfo({ username: params.username });
                        return [2];
                }
            });
        });
    };
    User.prototype.updatePassword = function (newPassword, oldPassword) {
        return this.oauthInstance.authApi.updatePasswordByOld({
            old_password: oldPassword,
            new_password: newPassword,
        });
    };
    User.prototype.updateUsername = function (username) {
        if (typeof username !== 'string') {
            (0, utilities_1.throwError)(utilities_1.ERRORS.INVALID_PARAMS, 'username must be a string');
        }
        return this.update({
            username: username,
        });
    };
    User.prototype.refresh = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var newUserInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.getUserInfo(params)];
                    case 1:
                        newUserInfo = _a.sent();
                        this.setLocalUserInfo(newUserInfo);
                        return [2, newUserInfo];
                }
            });
        });
    };
    User.prototype.getLocalUserInfo = function (key) {
        var userInfoKey = this.cache.keys.userInfoKey;
        var userInfo = this.cache.getStore(userInfoKey);
        return userInfo[key];
    };
    User.prototype.getLocalUserInfoAsync = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            var userInfoKey, userInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        userInfoKey = this.cache.keys.userInfoKey;
                        return [4, this.cache.getStoreAsync(userInfoKey)];
                    case 1:
                        userInfo = _a.sent();
                        return [2, userInfo[key]];
                }
            });
        });
    };
    User.prototype.setUserInfo = function () {
        var _this = this;
        var userInfoKey = this.cache.keys.userInfoKey;
        var userInfo = this.cache.getStore(userInfoKey);
        [
            'uid',
            'email',
            'name',
            'gender',
            'picture',
            'email_verified',
            'phone_number',
            'birthdate',
            'zoneinfo',
            'locale',
            'sub',
            'created_from',
            'providers',
            'username',
        ].forEach(function (infoKey) {
            _this[infoKey] = userInfo[infoKey];
        });
    };
    User.prototype.setLocalUserInfo = function (userInfo) {
        var userInfoKey = this.cache.keys.userInfoKey;
        this.cache.setStore(userInfoKey, userInfo);
        this.setUserInfo();
    };
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '更新用户信息失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 User.update() 的语法或参数是否正确',
                '  2 - 用户信息中是否包含非法值',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], User.prototype, "update", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '更新密码失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 User.updatePassword() 的语法或参数是否正确',
                '  3 - 新密码中是否包含非法字符',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [String, String]),
        __metadata("design:returntype", void 0)
    ], User.prototype, "updatePassword", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '更新用户名失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 User.updateUsername() 的语法或参数是否正确',
                '  2 - 当前环境是否开通了用户名密码登录',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [String]),
        __metadata("design:returntype", void 0)
    ], User.prototype, "updateUsername", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '刷新本地用户信息失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 User.refresh() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], User.prototype, "refresh", null);
    return User;
}());
var LoginState = (function () {
    function LoginState(options) {
        var envId = options.envId, cache = options.cache, oauthInstance = options.oauthInstance;
        if (!envId) {
            (0, utilities_1.throwError)(utilities_1.ERRORS.INVALID_PARAMS, 'envId is not defined');
        }
        this.cache = cache;
        this.oauthInstance = oauthInstance;
        this.user = new User({
            cache: this.cache,
            oauthInstance: oauthInstance,
        });
    }
    LoginState.prototype.checkLocalState = function () {
        var _a;
        this.oauthLoginState = (_a = this.oauthInstance) === null || _a === void 0 ? void 0 : _a.authApi.hasLoginStateSync();
        this.user.checkLocalInfo();
    };
    LoginState.prototype.checkLocalStateAsync = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4, ((_a = this.oauthInstance) === null || _a === void 0 ? void 0 : _a.authApi.getLoginState())];
                    case 1:
                        _b.sent();
                        return [4, this.user.checkLocalInfoAsync()];
                    case 2:
                        _b.sent();
                        return [2];
                }
            });
        });
    };
    return LoginState;
}());
exports.LoginState = LoginState;
var Auth = (function () {
    function Auth(config) {
        this.config = config;
        this.cache = config.cache;
        this.oauthInstance = config.oauthInstance;
    }
    Auth.prototype.bindPhoneNumber = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.editContact(params)];
            });
        });
    };
    Auth.prototype.unbindProvider = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.unbindProvider(params)];
            });
        });
    };
    Auth.prototype.bindEmail = function (params) {
        return this.oauthInstance.authApi.editContact(params);
    };
    Auth.prototype.verify = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.verify(params)];
            });
        });
    };
    Auth.prototype.getVerification = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getVerification(params)];
            });
        });
    };
    Object.defineProperty(Auth.prototype, "currentUser", {
        get: function () {
            if (this.cache.mode === 'async') {
                (0, utilities_1.printWarn)(utilities_1.ERRORS.INVALID_OPERATION, 'current platform\'s storage is asynchronous, please use getCurrentUser insteed');
                return;
            }
            var loginState = this.hasLoginState();
            if (loginState) {
                return loginState.user || null;
            }
            return null;
        },
        enumerable: false,
        configurable: true
    });
    Auth.prototype.getCurrentUser = function () {
        return __awaiter(this, void 0, void 0, function () {
            var loginState;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getLoginState()];
                    case 1:
                        loginState = _a.sent();
                        if (!loginState) return [3, 3];
                        return [4, loginState.user.checkLocalInfoAsync()];
                    case 2:
                        _a.sent();
                        return [2, loginState.user || null];
                    case 3: return [2, null];
                }
            });
        });
    };
    Auth.prototype.signInAnonymously = function (data) {
        if (data === void 0) { data = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signInAnonymously(data)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.signInWithOpenId = function (_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.useWxCloud, useWxCloud = _c === void 0 ? true : _c;
        return __awaiter(this, void 0, void 0, function () {
            var wxInfo, mainFunc;
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (!utilities_1.adapterForWxMp.isMatch()) {
                            throw Error('wx api undefined');
                        }
                        wxInfo = wx.getAccountInfoSync().miniProgram;
                        mainFunc = function (code) { return __awaiter(_this, void 0, void 0, function () {
                            var result, credentials, error_1;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        result = undefined;
                                        credentials = undefined;
                                        _a.label = 1;
                                    case 1:
                                        _a.trys.push([1, 4, , 5]);
                                        return [4, this.oauthInstance.authApi.grantProviderToken({
                                                provider_id: wxInfo === null || wxInfo === void 0 ? void 0 : wxInfo.appId,
                                                provider_code: code,
                                                provider_params: {
                                                    provider_code_type: 'open_id',
                                                    appid: wxInfo === null || wxInfo === void 0 ? void 0 : wxInfo.appId,
                                                },
                                            }, useWxCloud)];
                                    case 2:
                                        result = _a.sent();
                                        if ((result === null || result === void 0 ? void 0 : result.error_code) || !result.provider_token) {
                                            throw result;
                                        }
                                        return [4, this.oauthInstance.authApi.signInWithProvider({ provider_token: result.provider_token }, useWxCloud)];
                                    case 3:
                                        credentials = _a.sent();
                                        if (credentials === null || credentials === void 0 ? void 0 : credentials.error_code) {
                                            throw credentials;
                                        }
                                        return [3, 5];
                                    case 4:
                                        error_1 = _a.sent();
                                        throw error_1;
                                    case 5: return [4, this.oauthInstance.oauth2client.setCredentials(credentials)];
                                    case 6:
                                        _a.sent();
                                        return [2];
                                }
                            });
                        }); };
                        return [4, new Promise(function (resolve, reject) {
                                wx.login({
                                    success: function (res) { return __awaiter(_this, void 0, void 0, function () {
                                        var error_2;
                                        return __generator(this, function (_a) {
                                            switch (_a.label) {
                                                case 0:
                                                    _a.trys.push([0, 2, , 3]);
                                                    return [4, mainFunc(res.code)];
                                                case 1:
                                                    _a.sent();
                                                    resolve(true);
                                                    return [3, 3];
                                                case 2:
                                                    error_2 = _a.sent();
                                                    reject(error_2);
                                                    return [3, 3];
                                                case 3: return [2];
                                            }
                                        });
                                    }); },
                                    fail: function (res) {
                                        var error = new Error(res === null || res === void 0 ? void 0 : res.errMsg);
                                        error.code = res === null || res === void 0 ? void 0 : res.errno;
                                        reject(error);
                                    },
                                });
                            })];
                    case 1:
                        _d.sent();
                        return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.signInWithUnionId = function () {
        return __awaiter(this, void 0, void 0, function () {
            var error_3;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!utilities_1.adapterForWxMp.isMatch()) {
                            throw Error('wx api undefined');
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4, new Promise(function (resolve, reject) {
                                var wxInfo = wx.getAccountInfoSync().miniProgram;
                                wx.login({
                                    success: function (res) { return __awaiter(_this, void 0, void 0, function () {
                                        var providerId, result, providerToken, signInRes, error_4;
                                        return __generator(this, function (_a) {
                                            switch (_a.label) {
                                                case 0:
                                                    providerId = wxInfo === null || wxInfo === void 0 ? void 0 : wxInfo.appId;
                                                    _a.label = 1;
                                                case 1:
                                                    _a.trys.push([1, 4, , 5]);
                                                    return [4, this.oauthInstance.authApi.grantProviderToken({
                                                            provider_code: res.code,
                                                            provider_id: providerId,
                                                            provider_params: {
                                                                provider_code_type: 'union_id',
                                                                appid: wxInfo === null || wxInfo === void 0 ? void 0 : wxInfo.appId,
                                                            },
                                                        })];
                                                case 2:
                                                    result = _a.sent();
                                                    providerToken = result.provider_token;
                                                    if (!providerToken) {
                                                        reject(result);
                                                        return [2];
                                                    }
                                                    return [4, this.oauthInstance.authApi.signInWithProvider({
                                                            provider_id: providerId,
                                                            provider_token: providerToken,
                                                        })];
                                                case 3:
                                                    signInRes = _a.sent();
                                                    if (signInRes === null || signInRes === void 0 ? void 0 : signInRes.error_code) {
                                                        reject(signInRes);
                                                        return [2];
                                                    }
                                                    resolve(true);
                                                    return [3, 5];
                                                case 4:
                                                    error_4 = _a.sent();
                                                    reject(error_4);
                                                    return [3, 5];
                                                case 5: return [2];
                                            }
                                        });
                                    }); },
                                    fail: function (res) {
                                        var error = new Error(res === null || res === void 0 ? void 0 : res.errMsg);
                                        error.code = res === null || res === void 0 ? void 0 : res.errno;
                                        reject(error);
                                    },
                                });
                            })];
                    case 2:
                        _a.sent();
                        return [3, 4];
                    case 3:
                        error_3 = _a.sent();
                        throw error_3;
                    case 4: return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.signInWithPhoneAuth = function (_a) {
        var _b = _a.phoneCode, phoneCode = _b === void 0 ? '' : _b;
        return __awaiter(this, void 0, void 0, function () {
            var wxInfo, providerInfo, code, providerToken, signInRes, error_5;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!utilities_1.adapterForWxMp.isMatch()) {
                            throw Error('wx api undefined');
                        }
                        wxInfo = wx.getAccountInfoSync().miniProgram;
                        providerInfo = {
                            provider_params: { provider_code_type: 'phone' },
                            provider_id: wxInfo.appId,
                        };
                        return [4, wx.login()];
                    case 1:
                        code = (_c.sent()).code;
                        providerInfo.provider_code = code;
                        _c.label = 2;
                    case 2:
                        _c.trys.push([2, 6, , 7]);
                        return [4, this.oauthInstance.authApi.grantProviderToken(providerInfo)];
                    case 3:
                        providerToken = _c.sent();
                        if (providerToken.error_code) {
                            throw providerToken;
                        }
                        return [4, this.oauthInstance.authApi.patchProviderToken({
                                provider_token: providerToken.provider_token,
                                provider_id: wxInfo.appId,
                                provider_params: {
                                    code: phoneCode,
                                    provider_code_type: 'phone',
                                },
                            })];
                    case 4:
                        providerToken = _c.sent();
                        if (providerToken.error_code) {
                            throw providerToken;
                        }
                        return [4, this.oauthInstance.authApi.signInWithProvider({
                                provider_token: providerToken.provider_token,
                            })];
                    case 5:
                        signInRes = _c.sent();
                        if (signInRes === null || signInRes === void 0 ? void 0 : signInRes.error_code) {
                            throw signInRes;
                        }
                        return [3, 7];
                    case 6:
                        error_5 = _c.sent();
                        throw error_5;
                    case 7: return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.signInWithSms = function (_a) {
        var _b = _a.verificationInfo, verificationInfo = _b === void 0 ? { verification_id: '', is_user: false } : _b, _c = _a.verificationCode, verificationCode = _c === void 0 ? '' : _c, _d = _a.phoneNum, phoneNum = _d === void 0 ? '' : _d, _e = _a.bindInfo, bindInfo = _e === void 0 ? undefined : _e;
        return __awaiter(this, void 0, void 0, function () {
            var verifyRes, verification_token, signInRes, bindRes, signUpRes, error_6;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        _f.trys.push([0, 8, , 9]);
                        return [4, this.oauthInstance.authApi.verify({
                                verification_id: verificationInfo.verification_id,
                                verification_code: verificationCode,
                            })];
                    case 1:
                        verifyRes = _f.sent();
                        if (verifyRes === null || verifyRes === void 0 ? void 0 : verifyRes.error_code) {
                            throw verifyRes;
                        }
                        verification_token = verifyRes.verification_token;
                        if (!verificationInfo.is_user) return [3, 5];
                        return [4, this.oauthInstance.authApi.signIn({
                                username: "+86 ".concat(phoneNum),
                                verification_token: verification_token,
                            })];
                    case 2:
                        signInRes = _f.sent();
                        if (signInRes === null || signInRes === void 0 ? void 0 : signInRes.error_code) {
                            throw signInRes;
                        }
                        if (!bindInfo) return [3, 4];
                        return [4, this.oauthInstance.authApi.bindWithProvider({
                                provider_token: bindInfo === null || bindInfo === void 0 ? void 0 : bindInfo.providerToken,
                            })];
                    case 3:
                        bindRes = _f.sent();
                        if (bindRes === null || bindRes === void 0 ? void 0 : bindRes.error_code) {
                            throw bindRes;
                        }
                        _f.label = 4;
                    case 4: return [3, 7];
                    case 5: return [4, this.oauthInstance.authApi.signUp({
                            phone_number: "+86 ".concat(phoneNum),
                            verification_token: verification_token,
                            provider_token: bindInfo === null || bindInfo === void 0 ? void 0 : bindInfo.providerId,
                        })];
                    case 6:
                        signUpRes = _f.sent();
                        if (signUpRes === null || signUpRes === void 0 ? void 0 : signUpRes.error_code) {
                            throw signUpRes;
                        }
                        _f.label = 7;
                    case 7: return [2, this.createLoginState()];
                    case 8:
                        error_6 = _f.sent();
                        throw error_6;
                    case 9: return [2];
                }
            });
        });
    };
    Auth.prototype.setCustomSignFunc = function (getTickFn) {
        this.oauthInstance.authApi.setCustomSignFunc(getTickFn);
    };
    Auth.prototype.signInWithCustomTicket = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signInWithCustomTicket(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.signIn = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signIn(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState(params)];
                }
            });
        });
    };
    Auth.prototype.signUp = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signUp(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.setPassword = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.setPassword(params)];
            });
        });
    };
    Auth.prototype.isUsernameRegistered = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            var exist;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (typeof username !== 'string') {
                            (0, utilities_1.throwError)(utilities_1.ERRORS.INVALID_PARAMS, 'username must be a string');
                        }
                        return [4, this.oauthInstance.authApi.checkIfUserExist({ username: username })];
                    case 1:
                        exist = (_a.sent()).exist;
                        return [2, exist];
                }
            });
        });
    };
    Auth.prototype.signOut = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var userInfoKey, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        userInfoKey = this.cache.keys.userInfoKey;
                        return [4, this.oauthInstance.authApi.signOut(params)];
                    case 1:
                        res = _a.sent();
                        return [4, this.cache.removeStoreAsync(userInfoKey)];
                    case 2:
                        _a.sent();
                        eventBus.fire(EVENTS.LOGIN_STATE_CHANGED);
                        return [2, res];
                }
            });
        });
    };
    Auth.prototype.hasLoginState = function () {
        var _a;
        if (this.cache.mode === 'async') {
            (0, utilities_1.printWarn)(utilities_1.ERRORS.INVALID_OPERATION, 'current platform\'s storage is asynchronous, please use getLoginState insteed');
            return;
        }
        var oauthLoginState = (_a = this.oauthInstance) === null || _a === void 0 ? void 0 : _a.authApi.hasLoginStateSync();
        if (oauthLoginState) {
            var loginState = new LoginState({
                envId: this.config.env,
                cache: this.cache,
                oauthInstance: this.oauthInstance,
            });
            return loginState;
        }
        return null;
    };
    Auth.prototype.getLoginState = function () {
        return __awaiter(this, void 0, void 0, function () {
            var oauthLoginState, loginState;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.getLoginState()];
                    case 1:
                        oauthLoginState = _a.sent();
                        if (oauthLoginState) {
                            loginState = new LoginState({
                                envId: this.config.env,
                                cache: this.cache,
                                oauthInstance: this.oauthInstance,
                            });
                            return [2, loginState];
                        }
                        return [2, null];
                }
            });
        });
    };
    Auth.prototype.getUserInfo = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getUserInfo(params)];
            });
        });
    };
    Auth.prototype.getWedaUserInfo = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getWedaUserInfo()];
            });
        });
    };
    Auth.prototype.updateUserBasicInfo = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var loginState;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getLoginState()];
                    case 1:
                        loginState = _a.sent();
                        if (!loginState) return [3, 3];
                        return [4, loginState.user.updateUserBasicInfo(params)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2];
                }
            });
        });
    };
    Auth.prototype.getAuthHeader = function () {
        console.error('Auth.getAuthHeader API 已废弃');
        return {};
    };
    Auth.prototype.bindWithProvider = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.bindWithProvider(params)];
            });
        });
    };
    Auth.prototype.queryUser = function (queryObj) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.queryUserProfile(queryObj)];
            });
        });
    };
    Auth.prototype.getAccessToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            var oauthAccessTokenRes;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.oauth2client.getAccessToken()];
                    case 1:
                        oauthAccessTokenRes = _a.sent();
                        return [2, {
                                accessToken: oauthAccessTokenRes,
                                env: this.config.env,
                            }];
                }
            });
        });
    };
    Auth.prototype.grantProviderToken = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.grantProviderToken(params)];
            });
        });
    };
    Auth.prototype.patchProviderToken = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.patchProviderToken(params)];
            });
        });
    };
    Auth.prototype.signInWithProvider = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signInWithProvider(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState(params)];
                }
            });
        });
    };
    Auth.prototype.signInWithWechat = function (params) {
        if (params === void 0) { params = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.signInWithWechat(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState(params)];
                }
            });
        });
    };
    Auth.prototype.grantToken = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.authApi.grantToken(params)];
                    case 1:
                        _a.sent();
                        return [2, this.createLoginState()];
                }
            });
        });
    };
    Auth.prototype.genProviderRedirectUri = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.genProviderRedirectUri(params)];
            });
        });
    };
    Auth.prototype.resetPassword = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.resetPassword(params)];
            });
        });
    };
    Auth.prototype.deviceAuthorize = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.deviceAuthorize(params)];
            });
        });
    };
    Auth.prototype.sudo = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.sudo(params)];
            });
        });
    };
    Auth.prototype.deleteMe = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.deleteMe(params)];
            });
        });
    };
    Auth.prototype.getProviders = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getProviders()];
            });
        });
    };
    Auth.prototype.loginScope = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.loginScope()];
            });
        });
    };
    Auth.prototype.loginGroups = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.loginGroups()];
            });
        });
    };
    Auth.prototype.onLoginStateChanged = function (callback) {
        return __awaiter(this, void 0, void 0, function () {
            var loginState;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        eventBus.on(EVENTS.LOGIN_STATE_CHANGED, function () { return __awaiter(_this, void 0, void 0, function () {
                            var loginState;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4, this.getLoginState()];
                                    case 1:
                                        loginState = _a.sent();
                                        callback.call(this, loginState);
                                        return [2];
                                }
                            });
                        }); });
                        return [4, this.getLoginState()];
                    case 1:
                        loginState = _a.sent();
                        callback.call(this, loginState);
                        return [2];
                }
            });
        });
    };
    Auth.prototype.refreshTokenForce = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.refreshTokenForce(params)];
            });
        });
    };
    Auth.prototype.getCredentials = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getCredentials()];
            });
        });
    };
    Auth.prototype.setCredentials = function (credentials) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.oauthInstance.oauth2client.setCredentials(credentials)];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    Auth.prototype.getProviderSubType = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getProviderSubType()];
            });
        });
    };
    Auth.prototype.createCaptchaData = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.createCaptchaData(params)];
            });
        });
    };
    Auth.prototype.verifyCaptchaData = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.verifyCaptchaData(params)];
            });
        });
    };
    Auth.prototype.getMiniProgramQrCode = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getMiniProgramCode(params)];
            });
        });
    };
    Auth.prototype.getMiniProgramQrCodeStatus = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getMiniProgramQrCodeStatus(params)];
            });
        });
    };
    Auth.prototype.modifyPassword = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.modifyPassword(params)];
            });
        });
    };
    Auth.prototype.modifyPasswordWithoutLogin = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.modifyPasswordWithoutLogin(params)];
            });
        });
    };
    Auth.prototype.getUserBehaviorLog = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.oauthInstance.authApi.getUserBehaviorLog(params)];
            });
        });
    };
    Auth.prototype.createLoginState = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var loginState;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        loginState = new LoginState({
                            envId: this.config.env,
                            cache: this.cache,
                            oauthInstance: this.oauthInstance,
                        });
                        return [4, loginState.checkLocalStateAsync()];
                    case 1:
                        _a.sent();
                        return [4, loginState.user.refresh(params)];
                    case 2:
                        _a.sent();
                        eventBus.fire(EVENTS.LOGIN_STATE_CHANGED);
                        return [2, loginState];
                }
            });
        });
    };
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '绑定手机号失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().bindPhoneNumber() 的语法或参数是否正确',
                '  2 - 当前环境是否开通了短信验证码登录',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "bindPhoneNumber", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '解除三方绑定失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().unbindProvider() 的语法或参数是否正确',
                '  2 - 当前账户是否已经与此登录方式解绑',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "unbindProvider", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '绑定邮箱地址失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().bindEmail() 的语法或参数是否正确',
                '  2 - 当前环境是否开通了邮箱密码登录',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], Auth.prototype, "bindEmail", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '验证码验证失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().verify() 的语法或参数是否正确',
                '  2 - 当前环境是否开通了手机验证码/邮箱登录',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "verify", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取验证码失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().getVerification() 的语法或参数是否正确',
                '  2 - 当前环境是否开通了手机验证码/邮箱登录',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getVerification", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取用户信息失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().getCurrentUser() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getCurrentUser", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '匿名登录失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了匿名登录',
                '  2 - 调用 auth().signInAnonymously() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInAnonymously", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '小程序openId静默登录失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了小程序openId静默登录',
                '  2 - 调用 auth().signInWithOpenId() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInWithOpenId", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '小程序unionId静默登录失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了小程序unionId静默登录',
                '  2 - 调用 auth().signInWithUnionId() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInWithUnionId", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '小程序手机号授权登录失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了小程序手机号授权登录',
                '  2 - 调用 auth().signInWithPhoneAuth() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInWithPhoneAuth", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '短信验证码登陆',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了小程序短信验证码登陆',
                '  2 - 调用 auth().signInWithSms() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInWithSms", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '自定义登录失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了自定义登录',
                '  2 - 调用 auth().signInWithCustomTicket() 的语法或参数是否正确',
                '  3 - ticket 是否归属于当前环境',
                '  4 - 创建 ticket 的自定义登录私钥是否过期',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signInWithCustomTicket", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '注册失败',
            messages: [
                '请确认以下各项：',
                '  1 - 当前环境是否开启了指定登录方式',
                '  2 - 调用 auth().signUp() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signUp", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取用户是否被占用失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().isUsernameRegistered() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [String]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "isUsernameRegistered", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '用户登出失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().signOut() 的语法或参数是否正确',
                '  2 - 当前用户是否为匿名登录（匿名登录不支持signOut）',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "signOut", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取本地登录态失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().getLoginState() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getLoginState", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取用户信息失败',
            messages: [
                '请确认以下各项：',
                '  1 - 是否已登录',
                '  2 - 调用 auth().getUserInfo() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getUserInfo", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取微搭插件用户信息失败',
            messages: [
                '请确认以下各项：',
                '  1 - 是否已登录',
                '  2 - 调用 auth().getWedaUserInfo() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getWedaUserInfo", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '绑定第三方登录方式失败',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().bindWithProvider() 的语法或参数是否正确',
                '  2 - 此账户是否已经绑定此第三方',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "bindWithProvider", null);
    __decorate([
        (0, utilities_1.catchErrorsDecorator)({
            title: '获取身份源类型',
            messages: [
                '请确认以下各项：',
                '  1 - 调用 auth().getProviderSubType() 的语法或参数是否正确',
                "\u5982\u679C\u95EE\u9898\u4F9D\u7136\u5B58\u5728\uFF0C\u5EFA\u8BAE\u5230\u5B98\u65B9\u95EE\u7B54\u793E\u533A\u63D0\u95EE\u6216\u5BFB\u627E\u5E2E\u52A9\uFF1A".concat(utilities_1.COMMUNITY_SITE_URL),
            ],
        }),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], Auth.prototype, "getProviderSubType", null);
    return Auth;
}());
exports.Auth = Auth;
function generateAuthInstance(config, options) {
    var _a = config.region, region = _a === void 0 ? 'ap-shanghai' : _a;
    var platform = (options === null || options === void 0 ? void 0 : options.platform) || (0, utilities_1.useDefaultAdapter)();
    var runtime = platform.runtime;
    var _b = options || {}, env = _b.env, clientId = _b.clientId, debug = _b.debug, cache = _b.cache, cloudbase = _b.app;
    var apiOrigin = (options || {}).apiOrigin;
    if (!apiOrigin) {
        apiOrigin = "https://".concat(env, ".").concat(region, ".tcb-api.tencentcloudapi.com");
    }
    var oauthInstance = new oauth_1.CloudbaseOAuth((0, adapter_1.useAuthAdapter)({
        env: env,
        clientId: clientId,
        apiOrigin: apiOrigin,
        storage: config === null || config === void 0 ? void 0 : config.storage,
        baseRequest: config === null || config === void 0 ? void 0 : config.baseRequest,
        request: config === null || config === void 0 ? void 0 : config.request,
        anonymousSignInFunc: config === null || config === void 0 ? void 0 : config.anonymousSignInFunc,
        captchaOptions: config === null || config === void 0 ? void 0 : config.captchaOptions,
        wxCloud: config === null || config === void 0 ? void 0 : config.wxCloud,
    }));
    var authInstance = new Auth({
        env: env,
        region: region,
        persistence: config.persistence,
        debug: debug,
        cache: cache
            || new utilities_1.CloudbaseCache({
                persistence: config.persistence,
                keys: { userInfoKey: "user_info_".concat(env) },
                platformInfo: platform,
            }),
        runtime: runtime || 'web',
        _fromApp: cloudbase,
        oauthInstance: oauthInstance,
    });
    return { authInstance: authInstance, oauthInstance: oauthInstance };
}
exports.generateAuthInstance = generateAuthInstance;
var component = {
    name: COMPONENT_NAME,
    namespace: 'auth',
    entity: function (config) {
        if (config === void 0) { config = {
            region: '',
            persistence: 'local',
        }; }
        if (this.authInstance) {
            (0, utilities_1.printWarn)(utilities_1.ERRORS.INVALID_OPERATION, 'every cloudbase instance should has only one auth object');
            return this.authInstance;
        }
        var adapter = this.platform.adapter;
        var newPersistence = config.persistence || adapter.primaryStorage;
        if (newPersistence && newPersistence !== this.config.persistence) {
            this.updateConfig({ persistence: newPersistence });
        }
        var _a = generateAuthInstance(__assign(__assign({ wxCloud: this.config.wxCloud, storage: this.config.storage }, config), { persistence: this.config.persistence }), {
            env: this.config.env,
            clientId: this.config.clientId,
            apiOrigin: this.request.getBaseEndPoint(),
            platform: this.platform,
            cache: this.cache,
            app: this,
            debug: this.config.debug,
        }), authInstance = _a.authInstance, oauthInstance = _a.oauthInstance;
        this.oauthInstance = oauthInstance;
        this.authInstance = authInstance;
        return this.authInstance;
    },
};
try {
    cloudbase.registerComponent(component);
}
catch (e) { }
function registerAuth(app) {
    try {
        app.registerComponent(component);
    }
    catch (e) {
        console.warn(e);
    }
}
exports.registerAuth = registerAuth;
//# sourceMappingURL=data:application/json;base64,