var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { adapterForWxMp } from './utilities';
var OauthClientStorageBase = (function () {
    function OauthClientStorageBase(config) {
        this.localStorage = (config === null || config === void 0 ? void 0 : config.localStorage) || globalThis.localStorage;
    }
    OauthClientStorageBase.prototype.getItem = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2, this.localStorage.getItem(key)];
            });
        });
    };
    OauthClientStorageBase.prototype.removeItem = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.localStorage.removeItem(key);
                return [2];
            });
        });
    };
    OauthClientStorageBase.prototype.setItem = function (key, value) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.localStorage.setItem(key, value);
                return [2];
            });
        });
    };
    OauthClientStorageBase.prototype.getItemSync = function (key) {
        return this.localStorage.getItem(key);
    };
    OauthClientStorageBase.prototype.setItemSync = function (key, value) {
        this.localStorage.setItem(key, value);
    };
    OauthClientStorageBase.prototype.removeItemSync = function (key) {
        this.localStorage.removeItem(key);
    };
    return OauthClientStorageBase;
}());
var URL_REG = /^[^:]+:\/\/[^/]+(\/[^?#]+)/;
function generateOauthClientRequest(reqClass) {
    return function (url, options) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var requestId;
            return __generator(this, function (_b) {
                requestId = (_a = options === null || options === void 0 ? void 0 : options.headers) === null || _a === void 0 ? void 0 : _a['x-request-id'];
                return [2, new Promise(function (resolve, reject) {
                        var copyOptions = Object.assign({}, options);
                        if (copyOptions.body && typeof copyOptions.body !== 'string') {
                            copyOptions.body = JSON.stringify(copyOptions.body);
                        }
                        var task = wx.request({
                            url: url,
                            data: copyOptions.body,
                            timeout: reqClass._timeout,
                            method: copyOptions.method || 'GET',
                            header: copyOptions.headers,
                            success: function (res) {
                                if (res.code) {
                                    res = {
                                        error: res.code,
                                        error_description: res.message || res.code,
                                        request_id: res.requestId,
                                    };
                                }
                                if (!res.request_id) {
                                    res.request_id = res.request_id || requestId;
                                }
                                if (res.error) {
                                    res.error_uri = getUrlPath(url);
                                    reject(res);
                                }
                                resolve(res.data || {});
                            },
                            fail: function (err) {
                                reject({
                                    error: 'unreachable',
                                    error_description: err.message,
                                });
                            },
                            complete: function (err) {
                                if (!err || !err.errMsg) {
                                    return;
                                }
                                if (!reqClass._timeout || reqClass._restrictedMethods.indexOf('request') === -1) {
                                    return;
                                }
                                var errMsg = err.errMsg;
                                if (errMsg === 'request:fail timeout') {
                                    console.warn(reqClass._timeoutMsg);
                                    try {
                                        task.abort();
                                    }
                                    catch (e) { }
                                }
                            },
                        });
                    })];
            });
        });
    };
}
function getUrlPath(url) {
    return URL_REG.test(url) ? RegExp.$1 : url;
}
export var useAuthAdapter = function (config) {
    if (!adapterForWxMp.isMatch() || (config.storage && config.baseRequest))
        return config;
    var authOptions = {};
    try {
        var _a = adapterForWxMp.genAdapter(), localStorage_1 = _a.localStorage, ReqClass = _a.reqClass;
        if (localStorage_1) {
            authOptions.storage = new OauthClientStorageBase({ localStorage: localStorage_1 });
        }
        if (ReqClass) {
            var reqClass = new ReqClass({
                timeout: 10000,
                restrictedMethods: ['get', 'post', 'upload', 'download', 'request'],
            });
            authOptions.request = generateOauthClientRequest(reqClass);
        }
        return __assign(__assign({}, config), authOptions);
    }
    catch (e) {
        console.error('adapter generate fail:', e);
    }
    return config;
};
//# sourceMappingURL=data:application/json;base64,