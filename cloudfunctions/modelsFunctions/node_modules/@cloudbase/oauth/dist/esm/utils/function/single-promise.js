export class SinglePromise {
    constructor() {
        this.fnPromiseMap = new Map();
    }
    async run(key, fn) {
        let result = this.fnPromiseMap.get(key);
        if (!(await result)) {
            result = new Promise((resolve, reject) => {
                (async () => {
                    try {
                        await this.runIdlePromise();
                        const fnResult = fn();
                        resolve(await fnResult);
                    }
                    catch (error) {
                        reject(error);
                    }
                    finally {
                        this.fnPromiseMap.delete(key);
                    }
                })();
            });
            this.fnPromiseMap.set(key, result);
        }
        return result;
    }
    runIdlePromise() {
        return Promise.resolve();
    }
}
