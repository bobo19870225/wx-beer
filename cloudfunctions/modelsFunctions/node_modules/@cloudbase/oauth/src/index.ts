import { OAuth2Client } from './oauth2client/oauth2client'
import { AuthOptions, Auth } from './auth/apis'
export { Auth } from './auth/apis'
export * as authModels from './auth/models'
export type { ProviderProfile } from './auth/models'
export type { Credentials, OAuth2ClientOptions, ResponseError, AuthClientRequestOptions } from './oauth2client/models'
export type { AuthOptions } from './auth/apis'

export class CloudbaseOAuth {
  public oauth2client: OAuth2Client
  public authApi: Auth

  constructor(authOptions: AuthOptions) {
    const { apiOrigin, clientId, env, storage, request, baseRequest, anonymousSignInFunc, wxCloud } = authOptions
    this.oauth2client = new OAuth2Client({
      apiOrigin,
      clientId,
      env,
      storage,
      baseRequest: baseRequest || request,
      anonymousSignInFunc,
      wxCloud,
    })

    this.authApi = new Auth({
      credentialsClient: this.oauth2client,
      ...authOptions,
      // 兼容老逻辑，有值传入则不走Auth内的验证码请求逻辑
      request: request ? this.oauth2client.request.bind(this.oauth2client) : undefined,
    })
  }
}
