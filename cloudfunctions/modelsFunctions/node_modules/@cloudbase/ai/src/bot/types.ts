export interface IGetBotList {
  name: string
  introduction: string
  information: string
  enable: boolean
  pageSize: number
  pageNumber: number
}

export interface ICreateBot {
  botInfo: BotInfo
}

export interface IGetBot {
  botId: string
}

export interface IUpdateBot {
  botId: string
  botInfo: BotInfo
}

export interface IDeleteBot {
  botId: string
}

export interface IGetBotChatRecords {
  botId: string
  sort: 'asc' | 'desc' | string
  pageSize: number
  pageNumber: number
}

export interface ISendBotFeedback {
  userFeedback: IUserFeedback
}

export interface IGetBotFeedback {
  botId: string
  type: 'upvote' | 'downvote' | string
  sender: string
  senderFilter: 'include' | 'exclude' | 'equal' | 'unequal' | 'prefix' | string
  minRating: number
  maxRating: number
  from: number
  to: number
  pageSize: number
  pageNumber: number
}

export interface IGetBotRecommendQuestions {
  botId: string
  name: string
  introduction: string
  agentSetting: string
  msg: string
  history: Array<{
    role: string
    content: string
  }>
}

export interface IGenerateBot {
  simple: boolean
  prompt: string
}

export interface IBotPreview {
  name: string
  introduction: string
  agentSetting: string
  msg: string
  history: Array<{
    role: string
    content: string
  }>
  knowledgeBase: Array<string>
}

export interface IGenerateImage {
  prompt: string
}

export interface IBotSendMessage {
  botId: string
  msg: string
  history: Array<{
    role: string
    content: string
  }>
}

export interface IUserFeedback {
  recordId: string
  type: string
  botId: string
  comment: string
  rating: number
  tags: Array<string>
  input: string
  aiAnswer: string
}

export interface BotInfo {
  botId: string
  name: string
  introduction: string
  agentSetting: string
  welcomeMessage: string
  avatar: string
  background: string
  tags: Array<string>
  isNeedRecommend: boolean
  knowledgeBase: Array<string>
  type: string
  initQuestions: Array<string>
  enable: true
}
