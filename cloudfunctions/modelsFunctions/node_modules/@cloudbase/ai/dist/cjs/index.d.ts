import type { ICloudbase } from '@cloudbase/types';
import type { SDKRequestInterface } from '@cloudbase/adapter-interface';
import { Bot } from './bot';
import * as models from './models';
import * as types from './type';
import * as utils from './utils';
declare const MODELS: {
    hunyuan: typeof models.HunYuanModel;
    'hunyuan-beta': typeof models.HunYuanBetaModel;
    ark: typeof models.ArkModel;
    dashscope: typeof models.DashScopeModel;
    '01-ai': typeof models.YiModel;
    moonshot: typeof models.MoonshotModel;
    zhipu: typeof models.ZhiPuModel;
}, restModels: {
    HunYuanModel: typeof models.HunYuanModel;
    HunYuanBetaModel: typeof models.HunYuanBetaModel;
    ArkModel: typeof models.ArkModel;
    DashScopeModel: typeof models.DashScopeModel;
    YiModel: typeof models.YiModel;
    MoonshotModel: typeof models.MoonshotModel;
    ZhiPuModel: typeof models.ZhiPuModel;
};
declare class AI {
    private req;
    baseUrl: string;
    aiBaseUrl: string;
    aiBotBaseUrl: string;
    bot: Bot;
    constructor(req: SDKRequestInterface, baseUrl: string);
    createModel<T extends keyof typeof MODELS>(model: T): InstanceType<{
        hunyuan: typeof models.HunYuanModel;
        'hunyuan-beta': typeof models.HunYuanBetaModel;
        ark: typeof models.ArkModel;
        dashscope: typeof models.DashScopeModel;
        '01-ai': typeof models.YiModel;
        moonshot: typeof models.MoonshotModel;
        zhipu: typeof models.ZhiPuModel;
    }[T]>;
    registerModel(name: string, model: types.ChatModelConstructor): void;
    modelRequest: types.ModelReq;
    botRequest: types.BotReq;
}
declare function registerAi(app: ICloudbase): void;
export { types, utils, restModels as models, registerAi, AI, Bot };
