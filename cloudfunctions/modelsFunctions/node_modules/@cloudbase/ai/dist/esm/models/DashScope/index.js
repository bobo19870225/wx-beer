var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { createAsyncIterable, TransformStream, TextDecoderStream, createEventSourceParserTransformStream, toPolyfillReadable, } from '../../utils';
var DashScopeModel = (function () {
    function DashScopeModel(req, baseUrl, subUrl) {
        this.req = req;
        this.baseUrl = baseUrl;
        this.subUrl = 'dashscope/compatible-mode/v1/chat/completions';
        if (subUrl != null) {
            this.subUrl = subUrl;
        }
    }
    Object.defineProperty(DashScopeModel.prototype, "url", {
        get: function () {
            return "".concat(this.baseUrl, "/").concat(this.subUrl);
        },
        enumerable: false,
        configurable: true
    });
    DashScopeModel.prototype.generateText = function (data) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0: return [4, this.req({
                            url: this.url,
                            data: __assign(__assign({}, data), { stream: false }),
                            stream: false,
                        })];
                    case 1:
                        res = (_e.sent());
                        return [2, {
                                text: (_d = (_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.choices) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.message) === null || _c === void 0 ? void 0 : _c.content) !== null && _d !== void 0 ? _d : '',
                                rawResponse: res,
                            }];
                }
            });
        });
    };
    DashScopeModel.prototype.streamText = function (data) {
        return __awaiter(this, void 0, void 0, function () {
            var stream;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.req({
                            url: this.url,
                            data: __assign(__assign({}, data), { stream: true }),
                            stream: true,
                        })];
                    case 1:
                        stream = _a.sent();
                        return [2, new DashScopeModelStreamResult(stream)];
                }
            });
        });
    };
    return DashScopeModel;
}());
export { DashScopeModel };
var DashScopeModelStreamResult = (function () {
    function DashScopeModelStreamResult(_stream) {
        var stream = toPolyfillReadable(_stream);
        this._eventSourceStream = stream
            .pipeThrough(new TextDecoderStream())
            .pipeThrough(createEventSourceParserTransformStream());
    }
    Object.defineProperty(DashScopeModelStreamResult.prototype, "teeedStream", {
        get: function () {
            var _a = this._eventSourceStream.tee(), s1 = _a[0], s2 = _a[1];
            this._eventSourceStream = s2;
            return s1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashScopeModelStreamResult.prototype, "eventSourceStream", {
        get: function () {
            return createAsyncIterable(this.teeedStream);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashScopeModelStreamResult.prototype, "dataStream", {
        get: function () {
            return createAsyncIterable(this.eventSourceStream.pipeThrough(new TransformStream({
                transform: function (chunk, controller) {
                    try {
                        var data = JSON.parse(chunk.data);
                        controller.enqueue(data);
                    }
                    catch (e) {
                        if (chunk.data !== '[DONE]') {
                            console.warn('Error when transforming event source data to json', e);
                        }
                    }
                },
            })));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashScopeModelStreamResult.prototype, "textStream", {
        get: function () {
            return createAsyncIterable(this.dataStream.pipeThrough(new TransformStream({
                transform: function (chunk, controller) {
                    var _a, _b, _c, _d;
                    controller.enqueue((_d = (_c = (_b = (_a = chunk === null || chunk === void 0 ? void 0 : chunk.choices) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.delta) === null || _c === void 0 ? void 0 : _c.content) !== null && _d !== void 0 ? _d : '');
                },
            })));
        },
        enumerable: false,
        configurable: true
    });
    return DashScopeModelStreamResult;
}());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kZWxzL0Rhc2hTY29wZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIsZUFBZSxFQUNmLGlCQUFpQixFQUNqQixzQ0FBc0MsRUFDdEMsa0JBQWtCLEdBQ25CLE1BQU0sYUFBYSxDQUFBO0FBSXBCO0lBRUUsd0JBQW9CLEdBQWEsRUFBUyxPQUFlLEVBQUUsTUFBZTtRQUF0RCxRQUFHLEdBQUgsR0FBRyxDQUFVO1FBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQURsRCxXQUFNLEdBQUcsK0NBQStDLENBQUE7UUFFN0QsSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO1NBQ3JCO0lBQ0gsQ0FBQztJQUVELHNCQUFZLCtCQUFHO2FBQWY7WUFDRSxPQUFPLFVBQUcsSUFBSSxDQUFDLE9BQU8sY0FBSSxJQUFJLENBQUMsTUFBTSxDQUFFLENBQUE7UUFDekMsQ0FBQzs7O09BQUE7SUFFSyxxQ0FBWSxHQUFsQixVQUFtQixJQUF3Qjs7Ozs7OzRCQUM1QixXQUFNLElBQUksQ0FBQyxHQUFHLENBQUM7NEJBQzFCLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRzs0QkFDYixJQUFJLHdCQUNDLElBQUksS0FDUCxNQUFNLEVBQUUsS0FBSyxHQUNkOzRCQUNELE1BQU0sRUFBRSxLQUFLO3lCQUNkLENBQUMsRUFBQTs7d0JBUEksR0FBRyxHQUFHLENBQUMsU0FPWCxDQUFnQzt3QkFDbEMsV0FBTztnQ0FDTCxJQUFJLEVBQUUsTUFBQyxNQUFBLE1BQUEsTUFBQSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsT0FBTywwQ0FBRyxDQUFDLENBQUMsMENBQUUsT0FBTywwQ0FBRSxPQUFrQixtQ0FBSSxFQUFFO2dDQUMzRCxXQUFXLEVBQUUsR0FBRzs2QkFDakIsRUFBQTs7OztLQUNGO0lBRUssbUNBQVUsR0FBaEIsVUFBaUIsSUFBd0I7Ozs7OzRCQUN4QixXQUFNLElBQUksQ0FBQyxHQUFHLENBQUM7NEJBQzVCLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRzs0QkFDYixJQUFJLHdCQUNDLElBQUksS0FDUCxNQUFNLEVBQUUsSUFBSSxHQUNiOzRCQUNELE1BQU0sRUFBRSxJQUFJO3lCQUNiLENBQUMsRUFBQTs7d0JBUEksTUFBTSxHQUFHLFNBT2I7d0JBQ0YsV0FBTyxJQUFJLDBCQUEwQixDQUFDLE1BQU0sQ0FBQyxFQUFBOzs7O0tBQzlDO0lBQ0gscUJBQUM7QUFBRCxDQUFDLEFBdENELElBc0NDOztBQUVEO0lBR0Usb0NBQVksT0FBbUM7UUFDN0MsSUFBTSxNQUFNLEdBQUcsa0JBQWtCLENBQUMsT0FBTyxDQUFtQixDQUFBO1FBQzVELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxNQUFNO2FBQzdCLFdBQVcsQ0FBQyxJQUFJLGlCQUFpQixFQUFFLENBQUM7YUFDcEMsV0FBVyxDQUFDLHNDQUFzQyxFQUFFLENBQUMsQ0FBQTtJQUMxRCxDQUFDO0lBRUQsc0JBQVksbURBQVc7YUFBdkI7WUFDUSxJQUFBLEtBQVcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxFQUF2QyxFQUFFLFFBQUEsRUFBRSxFQUFFLFFBQWlDLENBQUE7WUFDOUMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsQ0FBQTtZQUM1QixPQUFPLEVBQUUsQ0FBQTtRQUNYLENBQUM7OztPQUFBO0lBRUQsc0JBQUkseURBQWlCO2FBQXJCO1lBQ0UsT0FBTyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDOUMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxrREFBVTthQUFkO1lBQ0UsT0FBTyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDLElBQUksZUFBZSxDQUF5QztnQkFDeEgsU0FBUyxZQUFDLEtBQUssRUFBRSxVQUFVO29CQUN6QixJQUFJO3dCQUNGLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBOEIsQ0FBQTt3QkFDaEUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtxQkFDekI7b0JBQUMsT0FBTyxDQUFDLEVBQUU7d0JBQ1YsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLFFBQVEsRUFBRTs0QkFDM0IsT0FBTyxDQUFDLElBQUksQ0FBQyxtREFBbUQsRUFBRSxDQUFDLENBQUMsQ0FBQTt5QkFDckU7cUJBQ0Y7Z0JBQ0gsQ0FBQzthQUNGLENBQUMsQ0FBRSxDQUFFLENBQUE7UUFDUixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGtEQUFVO2FBQWQ7WUFDRSxPQUFPLG1CQUFtQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLElBQUksZUFBZSxDQUFvQztnQkFDNUcsU0FBUyxZQUFDLEtBQUssRUFBRSxVQUFVOztvQkFDekIsVUFBVSxDQUFDLE9BQU8sQ0FBQyxNQUFBLE1BQUEsTUFBQSxNQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxPQUFPLDBDQUFHLENBQUMsQ0FBQywwQ0FBRSxLQUFLLDBDQUFFLE9BQU8sbUNBQUksRUFBRSxDQUFDLENBQUE7Z0JBQy9ELENBQUM7YUFDRixDQUFDLENBQUUsQ0FBRSxDQUFBO1FBQ1IsQ0FBQzs7O09BQUE7SUFDSCxpQ0FBQztBQUFELENBQUMsQUExQ0QsSUEwQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIFBhcnNlZEV2ZW50IH0gZnJvbSAnZXZlbnRzb3VyY2UtcGFyc2VyJ1xuaW1wb3J0IHtcbiAgY3JlYXRlQXN5bmNJdGVyYWJsZSxcbiAgVHJhbnNmb3JtU3RyZWFtLFxuICBUZXh0RGVjb2RlclN0cmVhbSxcbiAgY3JlYXRlRXZlbnRTb3VyY2VQYXJzZXJUcmFuc2Zvcm1TdHJlYW0sXG4gIHRvUG9seWZpbGxSZWFkYWJsZSxcbn0gZnJvbSAnLi4vLi4vdXRpbHMnXG5pbXBvcnQgdHlwZSB7IERhc2hTY29wZUlucHV0RGF0YSwgRGFzaFNjb3BlR2VuZXJhdGVUZXh0T3V0cHV0LCBEYXNoU2NvcGVTdHJlYW1UZXh0T3V0cHV0IH0gZnJvbSAnLi90eXBlJ1xuaW1wb3J0IHR5cGUgeyBDaGF0TW9kZWwsIFN0cmVhbVRleHRSZXN1bHQsIE1vZGVsUmVxIH0gZnJvbSAnLi4vLi4vdHlwZSdcblxuZXhwb3J0IGNsYXNzIERhc2hTY29wZU1vZGVsIGltcGxlbWVudHMgQ2hhdE1vZGVsIHtcbiAgcHVibGljIHN1YlVybCA9ICdkYXNoc2NvcGUvY29tcGF0aWJsZS1tb2RlL3YxL2NoYXQvY29tcGxldGlvbnMnXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVxOiBNb2RlbFJlcSwgcHVibGljIGJhc2VVcmw6IHN0cmluZywgc3ViVXJsPzogc3RyaW5nKSB7XG4gICAgaWYgKHN1YlVybCAhPSBudWxsKSB7XG4gICAgICB0aGlzLnN1YlVybCA9IHN1YlVybFxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0IHVybCgpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5iYXNlVXJsfS8ke3RoaXMuc3ViVXJsfWBcbiAgfVxuXG4gIGFzeW5jIGdlbmVyYXRlVGV4dChkYXRhOiBEYXNoU2NvcGVJbnB1dERhdGEpIHtcbiAgICBjb25zdCByZXMgPSAoYXdhaXQgdGhpcy5yZXEoe1xuICAgICAgdXJsOiB0aGlzLnVybCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgc3RyZWFtOiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICBzdHJlYW06IGZhbHNlLFxuICAgIH0pKSBhcyBEYXNoU2NvcGVHZW5lcmF0ZVRleHRPdXRwdXRcbiAgICByZXR1cm4ge1xuICAgICAgdGV4dDogKHJlcz8uY2hvaWNlcz8uWzBdPy5tZXNzYWdlPy5jb250ZW50IGFzIHN0cmluZykgPz8gJycsXG4gICAgICByYXdSZXNwb25zZTogcmVzLFxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHN0cmVhbVRleHQoZGF0YTogRGFzaFNjb3BlSW5wdXREYXRhKSB7XG4gICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgdGhpcy5yZXEoe1xuICAgICAgdXJsOiB0aGlzLnVybCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgc3RyZWFtOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHN0cmVhbTogdHJ1ZSxcbiAgICB9KVxuICAgIHJldHVybiBuZXcgRGFzaFNjb3BlTW9kZWxTdHJlYW1SZXN1bHQoc3RyZWFtKVxuICB9XG59XG5cbmNsYXNzIERhc2hTY29wZU1vZGVsU3RyZWFtUmVzdWx0IGltcGxlbWVudHMgU3RyZWFtVGV4dFJlc3VsdCB7XG4gIHByaXZhdGUgX2V2ZW50U291cmNlU3RyZWFtOiBSZWFkYWJsZVN0cmVhbTxQYXJzZWRFdmVudD5cblxuICBjb25zdHJ1Y3Rvcihfc3RyZWFtOiBSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pikge1xuICAgIGNvbnN0IHN0cmVhbSA9IHRvUG9seWZpbGxSZWFkYWJsZShfc3RyZWFtKSBhcyB0eXBlb2YgX3N0cmVhbVxuICAgIHRoaXMuX2V2ZW50U291cmNlU3RyZWFtID0gc3RyZWFtXG4gICAgICAucGlwZVRocm91Z2gobmV3IFRleHREZWNvZGVyU3RyZWFtKCkpXG4gICAgICAucGlwZVRocm91Z2goY3JlYXRlRXZlbnRTb3VyY2VQYXJzZXJUcmFuc2Zvcm1TdHJlYW0oKSlcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IHRlZWVkU3RyZWFtKCkge1xuICAgIGNvbnN0IFtzMSwgczJdID0gdGhpcy5fZXZlbnRTb3VyY2VTdHJlYW0udGVlKClcbiAgICB0aGlzLl9ldmVudFNvdXJjZVN0cmVhbSA9IHMyXG4gICAgcmV0dXJuIHMxXG4gIH1cblxuICBnZXQgZXZlbnRTb3VyY2VTdHJlYW0oKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUFzeW5jSXRlcmFibGUodGhpcy50ZWVlZFN0cmVhbSlcbiAgfVxuXG4gIGdldCBkYXRhU3RyZWFtKCkge1xuICAgIHJldHVybiBjcmVhdGVBc3luY0l0ZXJhYmxlKHRoaXMuZXZlbnRTb3VyY2VTdHJlYW0ucGlwZVRocm91Z2gobmV3IFRyYW5zZm9ybVN0cmVhbTxQYXJzZWRFdmVudCwgRGFzaFNjb3BlU3RyZWFtVGV4dE91dHB1dD4oe1xuICAgICAgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoY2h1bmsuZGF0YSkgYXMgRGFzaFNjb3BlU3RyZWFtVGV4dE91dHB1dFxuICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShkYXRhKVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgaWYgKGNodW5rLmRhdGEgIT09ICdbRE9ORV0nKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHdoZW4gdHJhbnNmb3JtaW5nIGV2ZW50IHNvdXJjZSBkYXRhIHRvIGpzb24nLCBlKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KSwpLClcbiAgfVxuXG4gIGdldCB0ZXh0U3RyZWFtKCkge1xuICAgIHJldHVybiBjcmVhdGVBc3luY0l0ZXJhYmxlKHRoaXMuZGF0YVN0cmVhbS5waXBlVGhyb3VnaChuZXcgVHJhbnNmb3JtU3RyZWFtPERhc2hTY29wZVN0cmVhbVRleHRPdXRwdXQsIHN0cmluZz4oe1xuICAgICAgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShjaHVuaz8uY2hvaWNlcz8uWzBdPy5kZWx0YT8uY29udGVudCA/PyAnJylcbiAgICAgIH0sXG4gICAgfSksKSwpXG4gIH1cbn1cbiJdfQ==