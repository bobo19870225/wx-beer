var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Bot } from './bot';
import * as models from './models';
import * as types from './type';
import * as utils from './utils';
var MODELS = models.MODELS, restModels = __rest(models, ["MODELS"]);
var AI = (function () {
    function AI(req, baseUrl) {
        var _this = this;
        this.req = req;
        this.baseUrl = baseUrl;
        this.modelRequest = function (_a) {
            var url = _a.url, data = _a.data, headers = _a.headers, stream = _a.stream;
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4, this.req.fetch({
                                method: 'post',
                                headers: __assign({}, headers),
                                body: JSON.stringify(data),
                                url: url,
                                stream: stream,
                            })];
                        case 1: return [2, (_b.sent()).data];
                    }
                });
            });
        };
        this.botRequest = function (_a) {
            var method = _a.method, url = _a.url, _b = _a.data, data = _b === void 0 ? {} : _b, headers = _a.headers, stream = _a.stream;
            return __awaiter(_this, void 0, void 0, function () {
                function objectToParam(obj) {
                    return Object.entries(obj)
                        .map(function (_a) {
                        var key = _a[0], value = _a[1];
                        return "".concat(key, "=").concat(value);
                    })
                        .join('&');
                }
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!(method === 'get')) return [3, 2];
                            return [4, this.req.fetch({ url: "".concat(url, "?").concat(objectToParam(data)), method: method, headers: headers, stream: stream })];
                        case 1: return [2, (_c.sent()).data];
                        case 2: return [4, this.req.fetch({
                                url: url,
                                body: JSON.stringify(data),
                                headers: __assign({ 'Content-Type': 'application/json' }, headers),
                                stream: stream,
                                method: method,
                            })];
                        case 3: return [2, (_c.sent()).data];
                    }
                });
            });
        };
        this.aiBaseUrl = "".concat(baseUrl, "/ai");
        this.aiBotBaseUrl = "".concat(baseUrl, "/aibot");
        this.bot = new Bot(this.botRequest, this.aiBotBaseUrl);
    }
    AI.prototype.createModel = function (model) {
        return new MODELS[model](this.modelRequest, this.aiBaseUrl);
    };
    AI.prototype.registerModel = function (name, model) {
        if (MODELS[name] != null) {
            console.warn("AI model ".concat(name, " already exists!"));
            return;
        }
        MODELS[name] = model;
    };
    return AI;
}());
var COMPONENT_NAME = 'ai';
function ai(options) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var req, accessTokenFromAuth, _c, env, baseUrl;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    req = this.request;
                    if (req.fetch == null) {
                        throw new Error('cloudbase.request.fetch() unimplemented!');
                    }
                    if (!this.authInstance) return [3, 2];
                    return [4, this.authInstance.getAccessToken()];
                case 1:
                    _c = _d.sent();
                    return [3, 3];
                case 2:
                    _c = { accessToken: '', env: '' };
                    _d.label = 3;
                case 3:
                    accessTokenFromAuth = _c;
                    env = (_a = options === null || options === void 0 ? void 0 : options.env) !== null && _a !== void 0 ? _a : accessTokenFromAuth.env;
                    baseUrl = (_b = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _b !== void 0 ? _b : "https://".concat(env, ".api.tcloudbasegateway.com/v1");
                    return [2, new AI(req, baseUrl)];
            }
        });
    });
}
var component = {
    name: COMPONENT_NAME,
    entity: { ai: ai },
};
function registerAi(app) {
    try {
        app.registerComponent(component);
    }
    catch (e) {
        console.warn(e);
    }
}
export { types, utils, restModels as models, registerAi, AI, Bot };
//# sourceMappingURL=data:application/json;base64,