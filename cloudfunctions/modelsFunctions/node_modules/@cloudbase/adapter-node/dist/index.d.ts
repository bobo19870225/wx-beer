import { IFetchOptions, IRequestConfig, IRequestOptions, ResponseObject, SDKAdapterInterface, SDKRequestInterface } from "@cloudbase/adapter-interface";
export declare class NodeRequest implements SDKRequestInterface {
    private readonly timeout;
    private readonly timeoutMsg;
    private readonly restrictedMethods;
    constructor(config: IRequestConfig);
    get(options: IRequestOptions): Promise<ResponseObject>;
    post(options: IRequestOptions): Promise<ResponseObject>;
    put(options: IRequestOptions): Promise<ResponseObject>;
    upload(options: IRequestOptions): Promise<ResponseObject>;
    download(options: IRequestOptions): Promise<unknown>;
    fetch(options: IFetchOptions): Promise<ResponseObject>;
    protected request(options: IRequestOptions, enableAbort?: boolean): Promise<ResponseObject>;
}
/**
 * 判断当前环境是否为 Node.js 环境
 */
declare function isMatch(): boolean;
declare function genAdapter(): SDKAdapterInterface;
declare const adapter: {
    genAdapter: typeof genAdapter;
    isMatch: typeof isMatch;
    runtime: string;
};
export default adapter;
