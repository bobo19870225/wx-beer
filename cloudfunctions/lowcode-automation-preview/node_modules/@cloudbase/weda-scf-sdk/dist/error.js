"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.COMMON_ERROR_MESSAGE = exports.TCBError = void 0;
/** 预置的错误对象, 可用该对象抛出自定义错误代码及错误信息 */
class TCBError extends Error {
    constructor(code, message, options = {}) {
        super(message);
        this.code = code;
        this.name = 'TCBError';
        this.reason = options.reason;
        this.original = options.original;
    }
    /** 获取错误堆栈信息 */
    getStack() {
        if (this.original) {
            // 微搭 cloud-api 错误对象则有 this.original.original
            let msg = this.original.message;
            // @ts-ignore
            if (this.original.original) {
                // @ts-ignore
                msg += `\n${JSON.stringify(this.original.original)}`;
            }
            return `${msg}\n ${this.original.stack}`;
        }
        return this.stack || this.reason || this.message;
    }
}
exports.TCBError = TCBError;
/** 常见的错误信息对应描述 */
exports.COMMON_ERROR_MESSAGE = {
    'UserError.InvalidUser': '无法获取当前用户信息, 请先登录',
};
