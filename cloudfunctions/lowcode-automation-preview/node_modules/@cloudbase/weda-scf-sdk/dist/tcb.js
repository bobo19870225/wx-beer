"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCloudbaseContext = exports.tcb = exports.getApp = exports.getConfig = exports.init = void 0;
const node_sdk_1 = __importDefault(require("@cloudbase/node-sdk"));
const config = {
    env: node_sdk_1.default.SYMBOL_CURRENT_ENV,
    wedaTarget: 'prod',
    envType: 'prod',
};
function init(cfg) {
    Object.assign(config, cfg);
}
exports.init = init;
function getConfig(k) {
    return config[k];
}
exports.getConfig = getConfig;
let currentApp;
/** 获取App */
function getApp() {
    if (currentApp && currentApp.env === config.env)
        return currentApp.app;
    const app = node_sdk_1.default.init({
        env: config.env,
    });
    currentApp = {
        app,
        env: config.env,
    };
    return app;
}
exports.getApp = getApp;
exports.tcb = node_sdk_1.default;
/**
 * 解析云函数的 context
 *  为保证能获取到完整的context信息, 应当保证在第一次调用时有传入 context
 * @param context tcb 云函数的context, 即 main 函数的第二个参数
 */
function getCloudbaseContext() {
    return node_sdk_1.default.getCloudbaseContext();
}
exports.getCloudbaseContext = getCloudbaseContext;
