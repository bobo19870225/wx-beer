"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const weda_node_sdk_1 = require("@cloudbase/weda-node-sdk");
const commonService = __importStar(require("./common-service"));
const user = __importStar(require("./user"));
const config_1 = require("../../config");
const ALL_METHODS = Object.assign(Object.assign({}, commonService), user);
const common = async function common(ctx) {
    if (ctx.method !== 'POST')
        ctx.throw(405, config_1.HTTP_CODE_MAP['405'].message);
    const requestBody = ctx.request.body || {};
    const methodName = ctx.path.replace(/^\//, '');
    // @ts-ignore
    const method = ALL_METHODS[methodName];
    if (!method) {
        ctx.throw(404, `找不到数据源公共方法${methodName}`);
    }
    const result = await method(requestBody.params, (0, weda_node_sdk_1.getCommonContext)());
    // result 的值可能为 null,  koa 中将 ctx.body 设置为 null 即表示将body清空, 后续对其再设置将无效
    //  ref: https://github.com/koajs/koa/issues/998
    if (result !== null)
        ctx.body = result;
};
exports.default = common;
