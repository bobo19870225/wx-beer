"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFieldTypeName = exports.getFieldDescription = exports.SCALAR_TYPES = void 0;
const graphql_1 = require("graphql");
const scalar_1 = require("./scalar");
exports.SCALAR_TYPES = {
    any: scalar_1.GraphQLAny,
    number: graphql_1.GraphQLFloat,
    boolean: graphql_1.GraphQLBoolean,
    string: graphql_1.GraphQLString,
    id: graphql_1.GraphQLID,
    int: graphql_1.GraphQLInt,
};
/**
 * 获取字段在 Graphql 中的字段描述
 * @param fieldName 字段名
 * @param schema 字段对应的数据源schema对象
 */
function getFieldDescription(fieldName, schema) {
    let desc = schema.title || fieldName;
    // @ts-ignore
    if (schema.format)
        desc += `(format: ${schema.format})`;
    if (typeof schema.default !== 'undefined')
        desc += ` , 默认值: ${JSON.stringify(schema.default)}`;
    if (schema.description)
        desc += `\n${schema.description}`;
    return desc;
}
exports.getFieldDescription = getFieldDescription;
/**
 * 获取复杂字段在graphql 中类型名称
 * @param prefixName 前缀名称
 * @param schema 字段的schema
 * @param fieldName 字段名
 */
function getFieldTypeName(prefixName, schema, fieldName) {
    return `${prefixName}${schema['x-id'] || fieldName || ''}`;
}
exports.getFieldTypeName = getFieldTypeName;
