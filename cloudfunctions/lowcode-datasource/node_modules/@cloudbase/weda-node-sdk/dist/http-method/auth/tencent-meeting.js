"use strict";
/**
 * 腾讯会议
 * https://cloud.tencent.com/document/product/1095/51257
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.provider = void 0;
const utils_1 = require("./utils");
const common_1 = require("../../common");
async function getAuthData(dsId) {
    const dsToken = await (0, utils_1.getToken)(dsId);
    const authInfo = dsToken === null || dsToken === void 0 ? void 0 : dsToken.MeetingToken;
    if (!authInfo || !authInfo.AccessToken) {
        throw new common_1.TCBError('FnError.HTTP.TokenNotAvailable', `无法获取数据源${dsId}对应的腾讯会议Token信息`, {
            reason: `unable to get Tencent Meeting token of datasource ${dsId}`,
        });
    }
    const now = Date.now();
    // 公共参数说明
    return {
        authInfo,
        headers: {
            AccessToken: authInfo.AccessToken,
            OpenId: authInfo.OpenId,
            // 经过与腾讯会议同学沟通, 传 0、1 均可,但当前传1 部分接口会报错, 故改为 0
            'X-TC-Registered': 0,
            'X-TC-Timestamp': Math.floor(now / 1000),
            'X-TC-Nonce': Math.floor(Math.random() * now),
        },
        body: {
            userid: authInfo.OpenId,
        },
    };
}
exports.provider = {
    getAuthData,
};
