import { IWedaRequestParams } from '@cloudbase/cloud-api';
import { IWedaApiParams } from './types';
export declare class CloudBaseError extends Error {
    readonly message: string;
    readonly name = "CloudBaseError";
    readonly original: Error | undefined;
    readonly code: string | number;
    readonly requestId: string;
    readonly action: string;
    readonly type: string;
    constructor(message: string, options?: {
        original?: Error | undefined;
        code?: string | number;
        requestId?: string;
        action?: string;
        type?: string;
    });
}
/** 请求云API的参数 */
export interface ICloudApiParams {
    /** yun api 请求的域名, 默认 lowcode */
    service?: string;
    /** 接口版本, 默认 2021-01-08*/
    version?: string;
    /** 接口请求超时时间, 默认30s */
    timeout?: number;
    /** 方法名称 */
    action: string;
    /** 云API参数 */
    data?: Record<string, any>;
    /**
     * 是否自动将 data 的key 改为大写驼峰
     *  默认为 true, 即使用时 data 可以采用小驼峰的 key
     */
    capitalizeDataKey?: boolean;
}
export interface IFetchOption {
    useAdmin?: boolean;
}
/**
 * 请求云API
 * @param params 配置参数
 */
export declare function fetchCloud(params: ICloudApiParams): Promise<any>;
export declare function getFetchWedaReq(params: IWedaApiParams, ignoreUser?: boolean, option?: IFetchOption): Promise<IWedaRequestParams>;
export declare function fetchUrl(params: IWedaApiParams, ignoreUser?: boolean, option?: IFetchOption): Promise<any>;
export declare function fetchUrlOld(params: IWedaApiParams, ignoreUser?: boolean, option?: IFetchOption): Promise<any>;
/**
 * 请求Weda后台接口
 * @param params 配置参数
 * @param ignoreUser 是否跳过用户信息校验
 */
export declare function fetchWeda(params: IWedaApiParams, ignoreUser?: boolean, option?: IFetchOption): Promise<any>;
