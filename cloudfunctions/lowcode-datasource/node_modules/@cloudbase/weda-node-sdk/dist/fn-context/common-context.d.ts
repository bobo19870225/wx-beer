import { IFnContext, IEnvInfo, IUserSource, ICloudFnParams } from '../types';
import { IConfig, IPrivateInfo } from '../config';
interface ISetCommonContext extends Pick<IConfig, 'entrance' | 'getDataSources'> {
    callDataSource: IFnContext['callDataSource'];
    callConnector: IFnContext['callDataSource'];
    callModel: IFnContext['callDataSource'];
    rawContext: any;
    /**
     * 云函数调用参数信息
     *  包括 { envType, wedaTarget, wx_xxxx, params} 等各种参数
     *  详见 packages/node-server/src/index.ts 中的 ICloudFnParams
     */
    cfnParams: ICloudFnParams;
    useAdmin?: boolean;
    wedaAccessToken?: string;
    privateInfo?: IPrivateInfo;
}
/** 公共的环境信息(与具体数据源无关的信息) */
declare type ICommonEnvInfo = Omit<IEnvInfo, 'dataSourceName' | 'dataSourceFullName'>;
/** 公共的context信息(与具体数据源无关的信息) */
declare type ICommonContext = Omit<IFnContext, 'method' | 'vars' | 'httpAuth' | 'env' | 'envInfo' | 'dataSourceProfile' | 'getCollectionName' | 'defaultParams' | 'collection'> & {
    env: ICommonEnvInfo;
    envInfo: ICommonEnvInfo;
    parsedRawContext: any;
    wedaAccessToken?: string;
    privateInfo?: IPrivateInfo;
};
/**
 * 生成私有化的context
 * @param contextIn
 * @returns
 */
export declare function generatePrivateContext(contextIn: ICommonContext | undefined): ICommonContext | undefined;
export declare function getCommonContext(): ICommonContext | undefined;
/**
 * 设置公共的context
 */
export declare function setCommonContext(config: ISetCommonContext): Promise<ICommonContext>;
/** 获取用户来源信息 */
export declare function getUserSourceCache(envInfo: ICommonEnvInfo, config: ISetCommonContext): Promise<IUserSource | undefined>;
export {};
