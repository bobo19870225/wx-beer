import { initCloudbaseInstance, IInitCloudbaseInstanceOptions } from './cloudbase'

interface IUploadFileOptions {
  cloudPath: string
  filePath: string
}

interface IDeleteFileOptions {
  fileIDs: string[]
}

interface IDownloadFileOptions {
  fileID: string
}

interface IGetTempFileURLOptions {
  fileIDs: string[]
}

export interface IPageModuleOptions {
  cloudbaseInstanceInitOptions?: any
}

export interface ICallMethodOptions {
  envType?: 'pre' | 'prod'
  wedaTarget?: 'demo' | 'pre' | 'prod'
}

export class PageModule {
  private inited = false
  private moduleName: string
  private env: string
  private cloudbaseInstance: any

  constructor(moduleName?: string, options?: IPageModuleOptions) {
    if (moduleName) {
      this.init(moduleName, options)
    }
  }

  init(moduleName: string, options: IPageModuleOptions = {}): PageModule {
    if (this.inited) {
      throw new Error('[ERROR]PageModule has already been inited, do not repeat initialization.')
    }

    this.moduleName = `${moduleName}`
    this.env = `$:${moduleName}`
    this.initCloudbaseInstance(this.env, options.cloudbaseInstanceInitOptions)
    this.inited = true

    return this
  }

  callMethod(methodName: string, data: object, options: ICallMethodOptions = {}) {
    this.checkInited()
    return this.cloudbaseInstance.callFunction({
      name: methodName,
      data: {
        ...options,
        moduleName: this.moduleName,
        envType: options.envType || 'prod',
        // 数据源参数放到 params 中
        params: data,
      },
    })
  }

  database() {
    return this.cloudbaseInstance.database()
  }

  uploadFile(options: IUploadFileOptions) {
  }

  deleteFile(options: IDeleteFileOptions) {
  }

  downloadFile(options: IDownloadFileOptions) {
  }

  getTempFileURL(options: IGetTempFileURLOptions) {
  }

  private initCloudbaseInstance(env: string, options: IInitCloudbaseInstanceOptions  = {}) {
    this.cloudbaseInstance = initCloudbaseInstance(env, options)
  }

  private checkInited() {
    if (!this.inited) {
      throw new Error('[ERROR]PageModule is not inited, please call `init()` method first.')
    }
  }
}
