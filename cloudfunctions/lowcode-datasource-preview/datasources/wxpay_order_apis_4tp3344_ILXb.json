{
	"configuration":{},
	"desc":"微信支付云模板apis",
	"id":"data-3RbQfCGNm",
	"isNewDataSource":1,
	"methods":[
		{
			"isTitleInValid":false,
			"presetParams":{
				"functionName":{
					"x-required":true,
					"x-id":"q1u9kwph",
					"description":"微信支付直连，回调工作流ID或回调地址",
					"title":"回调地址",
					"type":"_wxpaydc_",
					"x-index":1
				}
			},
			"description":"商户系统先调用该接口在微信支付服务后台生成预支付交易单，返回正确的预支付交易会话标识后再按Native、JSAPI、APP等不同场景生成交易串调起支付。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_1.shtml",
			"type":"http",
			"title":"JSAPI下单",
			"outParams":{
				"x-keyPath":"",
				"x-id":"8p76ze4g",
				"title":"value",
				"type":"object",
				"properties":{
					"timeStamp":{
						"x-keyPath":"timeStamp",
						"x-id":"7cdqortc",
						"title":"timeStamp",
						"type":"string"
					},
					"packageVal":{
						"x-keyPath":"packageVal",
						"x-id":"7bpk4chq",
						"title":"packageVal",
						"type":"string"
					},
					"paySign":{
						"x-keyPath":"paySign",
						"x-id":"na4l8sfr",
						"title":"paySign",
						"type":"string"
					},
					"appId":{
						"x-keyPath":"appId",
						"x-id":"arou9q74",
						"title":"appId",
						"type":"string"
					},
					"signType":{
						"x-keyPath":"signType",
						"x-id":"1kv5p5dh",
						"title":"signType",
						"type":"string"
					},
					"nonceStr":{
						"x-keyPath":"nonceStr",
						"x-id":"24kaz0hd",
						"title":"nonceStr",
						"type":"string"
					}
				}
			},
			"uuid":"d2ba1705-8f14-4cc6-a3ba-6ba58ab725fc",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"time_expire":{
						"x-required":false,
						"x-id":"657bf0b",
						"name":"time_expire",
						"title":"交易结束时间",
						"type":"string"
					},
					"amount":{
						"x-required":true,
						"x-id":"b46b080",
						"name":"amount",
						"title":"订单金额",
						"type":"object",
						"list":[
							{
								"x-required":true,
								"x-id":"7649d48",
								"name":"total",
								"pId":"b46b080",
								"title":"总金额",
								"type":"number"
							},
							{
								"x-required":false,
								"x-id":"79081ee",
								"name":"currency",
								"pId":"b46b080",
								"title":"货币类型",
								"type":"string"
							}
						],
						"properties":{
							"total":{
								"x-required":true,
								"x-id":"7649d48",
								"name":"total",
								"title":"总金额",
								"type":"number"
							},
							"currency":{
								"x-required":false,
								"x-id":"79081ee",
								"name":"currency",
								"title":"货币类型",
								"type":"string"
							}
						},
						"required":[
							"total"
						]
					},
					"out_trade_no":{
						"x-required":true,
						"x-id":"aa37c2a",
						"name":"out_trade_no",
						"title":"商户订单号",
						"type":"string"
					},
					"goods_tag":{
						"x-required":false,
						"x-id":"85171f1",
						"name":"goods_tag",
						"title":"订单优惠标记",
						"type":"string"
					},
					"settle_info":{
						"x-required":false,
						"x-id":"7f6ce12",
						"name":"settle_info",
						"title":"结算信息",
						"type":"object",
						"list":[
							{
								"x-required":false,
								"x-id":"9fa05bb",
								"name":"profit_sharing",
								"pId":"7f6ce12",
								"title":"是否指定分账",
								"type":"boolean"
							}
						],
						"properties":{
							"profit_sharing":{
								"x-required":false,
								"x-id":"9fa05bb",
								"name":"profit_sharing",
								"title":"是否指定分账",
								"type":"boolean"
							}
						},
						"required":[]
					},
					"description":{
						"x-required":true,
						"x-id":"66816ec",
						"name":"description",
						"title":"商品描述",
						"type":"string"
					},
					"attach":{
						"x-required":false,
						"x-id":"a5f5f0b",
						"name":"attach",
						"title":"附加数据",
						"type":"string"
					},
					"detail":{
						"x-required":false,
						"x-id":"63d80f9",
						"name":"detail",
						"title":"优惠功能",
						"type":"object",
						"list":[
							{
								"x-required":false,
								"x-id":"907ff77",
								"name":"invoice_id",
								"pId":"63d80f9",
								"title":"商品小票ID",
								"type":"string"
							},
							{
								"x-required":false,
								"x-id":"996221b",
								"name":"goods_detail",
								"pId":"63d80f9",
								"title":"单品列表",
								"type":"array",
								"list":[
									{
										"x-required":false,
										"x-id":"9adcb42",
										"name":"goods_name",
										"pId":"996221b",
										"title":"商品名称",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"956ff3f",
										"name":"wechatpay_goods_id",
										"pId":"996221b",
										"title":"微信支付商品编码",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"71f9f9b",
										"name":"quantity",
										"pId":"996221b",
										"title":"商品数量",
										"type":"number"
									},
									{
										"x-required":true,
										"x-id":"817d099",
										"name":"merchant_goods_id",
										"pId":"996221b",
										"title":"商户侧商品编码",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a07d0d4",
										"name":"unit_price",
										"pId":"996221b",
										"title":"商品单价",
										"type":"number"
									}
								],
								"items":{
									"x-required":false,
									"type":"object",
									"properties":{
										"goods_name":{
											"x-required":false,
											"x-id":"9adcb42",
											"name":"goods_name",
											"title":"商品名称",
											"type":"string"
										},
										"wechatpay_goods_id":{
											"x-required":false,
											"x-id":"956ff3f",
											"name":"wechatpay_goods_id",
											"title":"微信支付商品编码",
											"type":"string"
										},
										"quantity":{
											"x-required":true,
											"x-id":"71f9f9b",
											"name":"quantity",
											"title":"商品数量",
											"type":"number"
										},
										"merchant_goods_id":{
											"x-required":true,
											"x-id":"817d099",
											"name":"merchant_goods_id",
											"title":"商户侧商品编码",
											"type":"string"
										},
										"unit_price":{
											"x-required":true,
											"x-id":"a07d0d4",
											"name":"unit_price",
											"title":"商品单价",
											"type":"number"
										}
									},
									"required":[
										"quantity",
										"merchant_goods_id",
										"unit_price"
									]
								}
							},
							{
								"x-required":false,
								"x-id":"7a897fa",
								"name":"cost_price",
								"pId":"63d80f9",
								"title":"订单原价",
								"type":"number"
							}
						],
						"properties":{
							"invoice_id":{
								"x-required":false,
								"x-id":"907ff77",
								"name":"invoice_id",
								"title":"商品小票ID",
								"type":"string"
							},
							"goods_detail":{
								"x-required":false,
								"x-id":"996221b",
								"name":"goods_detail",
								"title":"单品列表",
								"type":"array",
								"list":[
									{
										"x-required":false,
										"x-id":"9adcb42",
										"name":"goods_name",
										"pId":"996221b",
										"title":"商品名称",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"956ff3f",
										"name":"wechatpay_goods_id",
										"pId":"996221b",
										"title":"微信支付商品编码",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"71f9f9b",
										"name":"quantity",
										"pId":"996221b",
										"title":"商品数量",
										"type":"number"
									},
									{
										"x-required":true,
										"x-id":"817d099",
										"name":"merchant_goods_id",
										"pId":"996221b",
										"title":"商户侧商品编码",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a07d0d4",
										"name":"unit_price",
										"pId":"996221b",
										"title":"商品单价",
										"type":"number"
									}
								],
								"items":{
									"x-required":false,
									"type":"object",
									"properties":{
										"goods_name":{
											"x-required":false,
											"x-id":"9adcb42",
											"name":"goods_name",
											"title":"商品名称",
											"type":"string"
										},
										"wechatpay_goods_id":{
											"x-required":false,
											"x-id":"956ff3f",
											"name":"wechatpay_goods_id",
											"title":"微信支付商品编码",
											"type":"string"
										},
										"quantity":{
											"x-required":true,
											"x-id":"71f9f9b",
											"name":"quantity",
											"title":"商品数量",
											"type":"number"
										},
										"merchant_goods_id":{
											"x-required":true,
											"x-id":"817d099",
											"name":"merchant_goods_id",
											"title":"商户侧商品编码",
											"type":"string"
										},
										"unit_price":{
											"x-required":true,
											"x-id":"a07d0d4",
											"name":"unit_price",
											"title":"商品单价",
											"type":"number"
										}
									},
									"required":[
										"quantity",
										"merchant_goods_id",
										"unit_price"
									]
								}
							},
							"cost_price":{
								"x-required":false,
								"x-id":"7a897fa",
								"name":"cost_price",
								"title":"订单原价",
								"type":"number"
							}
						},
						"required":[]
					},
					"payer":{
						"x-required":true,
						"x-id":"9295ba9",
						"name":"payer",
						"title":"支付者",
						"type":"object",
						"list":[
							{
								"x-required":true,
								"x-id":"5ffd75a",
								"name":"openid",
								"pId":"9295ba9",
								"title":"用户标识",
								"type":"string"
							}
						],
						"properties":{
							"openid":{
								"x-required":true,
								"x-id":"5ffd75a",
								"name":"openid",
								"title":"用户标识",
								"type":"string"
							}
						},
						"required":[
							"openid"
						]
					},
					"support_fapiao":{
						"x-required":false,
						"x-id":"961a36e",
						"name":"support_fapiao",
						"title":"电子发票入口开放标识",
						"type":"boolean"
					},
					"scene_info":{
						"x-required":false,
						"x-id":"83bbee5",
						"name":"scene_info",
						"title":"场景信息",
						"type":"object",
						"list":[
							{
								"x-required":false,
								"x-id":"9e8b52f",
								"name":"store_info",
								"pId":"83bbee5",
								"title":"商户门店信息",
								"type":"object",
								"list":[
									{
										"x-required":false,
										"x-id":"9683c04",
										"name":"address",
										"pId":"9e8b52f",
										"title":"详细地址",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"821a731",
										"name":"area_code",
										"pId":"9e8b52f",
										"title":"地区编码",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"96e2bab",
										"name":"name",
										"pId":"9e8b52f",
										"title":"门店名称",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a7bd745",
										"name":"id",
										"pId":"9e8b52f",
										"title":"门店编号",
										"type":"string"
									}
								],
								"properties":{
									"address":{
										"x-required":false,
										"x-id":"9683c04",
										"name":"address",
										"title":"详细地址",
										"type":"string"
									},
									"area_code":{
										"x-required":false,
										"x-id":"821a731",
										"name":"area_code",
										"title":"地区编码",
										"type":"string"
									},
									"name":{
										"x-required":false,
										"x-id":"96e2bab",
										"name":"name",
										"title":"门店名称",
										"type":"string"
									},
									"id":{
										"x-required":true,
										"x-id":"a7bd745",
										"name":"id",
										"title":"门店编号",
										"type":"string"
									}
								},
								"required":[
									"id"
								]
							},
							{
								"x-required":false,
								"x-id":"92960b7",
								"name":"device_id",
								"pId":"83bbee5",
								"title":"商户端设备号\t",
								"type":"string"
							},
							{
								"x-required":true,
								"x-id":"67ef580",
								"name":"payer_client_ip",
								"pId":"83bbee5",
								"title":"用户终端IP",
								"type":"string"
							}
						],
						"properties":{
							"store_info":{
								"x-required":false,
								"x-id":"9e8b52f",
								"name":"store_info",
								"title":"商户门店信息",
								"type":"object",
								"list":[
									{
										"x-required":false,
										"x-id":"9683c04",
										"name":"address",
										"pId":"9e8b52f",
										"title":"详细地址",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"821a731",
										"name":"area_code",
										"pId":"9e8b52f",
										"title":"地区编码",
										"type":"string"
									},
									{
										"x-required":false,
										"x-id":"96e2bab",
										"name":"name",
										"pId":"9e8b52f",
										"title":"门店名称",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a7bd745",
										"name":"id",
										"pId":"9e8b52f",
										"title":"门店编号",
										"type":"string"
									}
								],
								"properties":{
									"address":{
										"x-required":false,
										"x-id":"9683c04",
										"name":"address",
										"title":"详细地址",
										"type":"string"
									},
									"area_code":{
										"x-required":false,
										"x-id":"821a731",
										"name":"area_code",
										"title":"地区编码",
										"type":"string"
									},
									"name":{
										"x-required":false,
										"x-id":"96e2bab",
										"name":"name",
										"title":"门店名称",
										"type":"string"
									},
									"id":{
										"x-required":true,
										"x-id":"a7bd745",
										"name":"id",
										"title":"门店编号",
										"type":"string"
									}
								},
								"required":[
									"id"
								]
							},
							"device_id":{
								"x-required":false,
								"x-id":"92960b7",
								"name":"device_id",
								"title":"商户端设备号\t",
								"type":"string"
							},
							"payer_client_ip":{
								"x-required":true,
								"x-id":"67ef580",
								"name":"payer_client_ip",
								"title":"用户终端IP",
								"type":"string"
							}
						},
						"required":[
							"payer_client_ip"
						]
					}
				},
				"required":[
					"appid",
					"mchid",
					"description",
					"out_trade_no",
					"notify_url",
					"amount",
					"payer"
				]
			},
			"name":"unifiedOrder",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"appid\": \"{{vars.appid}}\",\n  \"mchid\": \"{{vars.mchid}}\",\n  \"description\": \"{{params.description}}\",\n  \"out_trade_no\": \"{{params.out_trade_no}}\",\n  \"time_expire\": \"{{params.time_expire}}\",\n  \"attach\": \"{{params.attach}}\",\n  \"notify_url\": \"{{vars.notifyUrlPay}}\",\n  \"goods_tag\": \"{{params.goods_tag}}\",\n  \"support_fapiao\": {{params.support_fapiao}},\n  \"amount\": {{params.amount}},\n  \"payer\": {{params.payer}},\n  \"detail\": {{params.detail}},\n  \"scene_info\": {{params.scene_info}},\n  \"settle_info\": {{params.settle_info}}\n}\n",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商户可以通过查询订单接口主动查询订单状态，完成下一步的业务逻辑。查询订单状态可通过微信支付订单号或商户订单号两种方式查询\n注意：\n查询订单可通过微信支付订单号和商户订单号两种方式查询，两种查询方式返回结果相同\n\n\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_2.shtml",
			"type":"http",
			"title":"查询订单-微信支付订单号查询",
			"outParams":{
				"x-keyPath":"",
				"x-id":"ly213kdx",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"jqtopuq0",
						"title":"transaction_id",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"",
						"x-id":"1q76c9cx",
						"title":"amount",
						"type":"object",
						"properties":{
							"payer_total":{
								"x-keyPath":"amount.payer_total",
								"x-id":"ociza2r6",
								"title":"payer_total",
								"type":"number"
							},
							"total":{
								"x-keyPath":"amount.total",
								"x-id":"0uydz8py",
								"title":"total",
								"type":"number"
							},
							"currency":{
								"x-keyPath":"amount.currency",
								"x-id":"5soaq71m",
								"title":"currency",
								"type":"string"
							},
							"payer_currency":{
								"x-keyPath":"amount.payer_currency",
								"x-id":"jx06skvo",
								"title":"payer_currency",
								"type":"string"
							}
						}
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"tbj66xmh",
						"title":"mchid",
						"type":"string"
					},
					"trade_state":{
						"x-keyPath":"trade_state",
						"x-id":"s4sjjlua",
						"title":"trade_state",
						"type":"string"
					},
					"bank_type":{
						"x-keyPath":"bank_type",
						"x-id":"n1h47pm5",
						"title":"bank_type",
						"type":"string"
					},
					"promotion_detail":{
						"x-keyPath":"promotion_detail",
						"x-id":"djku47ev",
						"title":"promotion_detail",
						"type":"array",
						"items":{
							"x-keyPath":"$item",
							"x-id":"3ggn3n2k",
							"title":"value",
							"type":"string"
						}
					},
					"success_time":{
						"x-keyPath":"success_time",
						"x-id":"4m5b4q4l",
						"title":"success_time",
						"type":"string"
					},
					"payer":{
						"x-keyPath":"",
						"x-id":"pwxw08yv",
						"title":"payer",
						"type":"object",
						"properties":{
							"openid":{
								"x-keyPath":"payer.openid",
								"x-id":"pvjpp0so",
								"title":"openid",
								"type":"string"
							}
						}
					},
					"out_trade_no":{
						"x-keyPath":"out_trade_no",
						"x-id":"paon43ff",
						"title":"out_trade_no",
						"type":"string"
					},
					"appid":{
						"x-keyPath":"appid",
						"x-id":"m1mk6nfd",
						"title":"appid",
						"type":"string"
					},
					"trade_state_desc":{
						"x-keyPath":"trade_state_desc",
						"x-id":"1uxennpf",
						"title":"trade_state_desc",
						"type":"string"
					},
					"trade_type":{
						"x-keyPath":"trade_type",
						"x-id":"1u0lmcxf",
						"title":"trade_type",
						"type":"string"
					},
					"attach":{
						"x-keyPath":"attach",
						"x-id":"z7iurr88",
						"title":"attach",
						"type":"string"
					}
				}
			},
			"uuid":"445d6833-c371-4018-be3f-5973515e845a",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":true,
						"x-id":"aabcb61",
						"name":"transaction_id",
						"title":"微信支付订单号",
						"type":"string"
					}
				},
				"required":[
					"transaction_id"
				]
			},
			"name":"queryOrderByTransactionId",
			"calleeBody":{
				"method":"GET",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"mchid":"{{vars.mchid}}"
						},
						"key":"25981c9e65b1a0"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/pay/transactions/id/{{params.transaction_id}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商户可以通过查询订单接口主动查询订单状态，完成下一步的业务逻辑。查询订单状态可通过微信支付订单号或商户订单号两种方式查询\n注意：\n查询订单可通过微信支付订单号和商户订单号两种方式查询，两种查询方式返回结果相同\n\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_2.shtml",
			"type":"http",
			"title":"查询订单-商户订单号查询",
			"outParams":{
				"x-keyPath":"",
				"x-id":"tvx36581",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"9pcd7639",
						"title":"transaction_id",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"",
						"x-id":"h5xm19mc",
						"title":"amount",
						"type":"object",
						"properties":{
							"payer_total":{
								"x-keyPath":"amount.payer_total",
								"x-id":"pynkbeve",
								"title":"payer_total",
								"type":"number"
							},
							"total":{
								"x-keyPath":"amount.total",
								"x-id":"y3vhgfwx",
								"title":"total",
								"type":"number"
							},
							"currency":{
								"x-keyPath":"amount.currency",
								"x-id":"gtwhpob2",
								"title":"currency",
								"type":"string"
							},
							"payer_currency":{
								"x-keyPath":"amount.payer_currency",
								"x-id":"56ih5p22",
								"title":"payer_currency",
								"type":"string"
							}
						}
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"12ungfn5",
						"title":"mchid",
						"type":"string"
					},
					"trade_state":{
						"x-keyPath":"trade_state",
						"x-id":"45t7fkma",
						"title":"trade_state",
						"type":"string"
					},
					"bank_type":{
						"x-keyPath":"bank_type",
						"x-id":"fnn36k98",
						"title":"bank_type",
						"type":"string"
					},
					"promotion_detail":{
						"x-keyPath":"promotion_detail",
						"x-id":"1pzyxb0e",
						"title":"promotion_detail",
						"type":"array",
						"items":{
							"x-keyPath":"$item",
							"x-id":"29m2sbgt",
							"title":"value",
							"type":"string"
						}
					},
					"success_time":{
						"x-keyPath":"success_time",
						"x-id":"zt842oau",
						"title":"success_time",
						"type":"string"
					},
					"payer":{
						"x-keyPath":"",
						"x-id":"uydordz8",
						"title":"payer",
						"type":"object",
						"properties":{
							"openid":{
								"x-keyPath":"payer.openid",
								"x-id":"tvlt8ifx",
								"title":"openid",
								"type":"string"
							}
						}
					},
					"out_trade_no":{
						"x-keyPath":"out_trade_no",
						"x-id":"nio0j6a3",
						"title":"out_trade_no",
						"type":"string"
					},
					"appid":{
						"x-keyPath":"appid",
						"x-id":"mm4711o8",
						"title":"appid",
						"type":"string"
					},
					"trade_state_desc":{
						"x-keyPath":"trade_state_desc",
						"x-id":"5awk2s1n",
						"title":"trade_state_desc",
						"type":"string"
					},
					"trade_type":{
						"x-keyPath":"trade_type",
						"x-id":"w9pxsm9k",
						"title":"trade_type",
						"type":"string"
					},
					"attach":{
						"x-keyPath":"attach",
						"x-id":"w2q6bqpp",
						"title":"attach",
						"type":"string"
					}
				}
			},
			"uuid":"b71ba896-2d31-4743-966f-bcdf95898074",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"out_trade_no":{
						"x-required":true,
						"x-id":"79a65f8",
						"name":"out_trade_no",
						"title":"商户订单号",
						"type":"string"
					}
				},
				"required":[
					"out_trade_no"
				]
			},
			"name":"queryOrderByOutTradeNo",
			"calleeBody":{
				"method":"GET",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"mchid":"{{vars.mchid}}"
						},
						"key":"40097b0954c390"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{{params.out_trade_no}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"以下情况需要调用关单接口：\n1、商户订单支付失败需要生成新单号重新发起支付，要对原订单号调用关单，避免重复支付；\n2、系统下单后，用户支付超时，系统退出不再受理，避免用户继续，请调用关单接口。\n注意：\n• 关单没有时间限制，建议在订单生成后间隔几分钟（最短5分钟）再调用关单接口，避免出现订单状态同步不及时导致关单失败。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_3.shtml",
			"type":"http",
			"title":"关闭订单",
			"outParams":{
				"x-keyPath":"",
				"x-id":"3k66lbyu",
				"title":"value",
				"type":"object",
				"properties":{}
			},
			"uuid":"4ea36de0-fe3f-439a-9091-ac6d82aec274",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"out_trade_no":{
						"x-required":true,
						"x-id":"6f1829f",
						"name":"out_trade_no",
						"title":"商户订单号",
						"type":"string"
					}
				},
				"required":[
					"mchid",
					"out_trade_no"
				]
			},
			"name":"closeOrder",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"mchid\": \"{{vars.mchid}}\"\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{{params.out_trade_no}}/close"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"presetParams":{
				"functionName":{
					"x-required":true,
					"x-id":"q1u9kwpj",
					"description":"微信支付直连，回调工作流ID或回调地址",
					"title":"回调地址",
					"type":"_wxpaydc_",
					"x-index":1
				}
			},
			"description":"当交易发生之后一年内，由于买家或者卖家的原因需要退款时，卖家可以通过退款接口将支付金额退还给买家，微信支付将在收到退款请求并且验证成功之后，将支付款按原路退还至买家账号上。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_9.shtml",
			"type":"http",
			"title":"申请退款",
			"outParams":{
				"x-keyPath":"",
				"x-id":"fbssu1mu",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"eoqmee8c",
						"title":"transaction_id",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"",
						"x-id":"jmg6ck1n",
						"title":"amount",
						"type":"object",
						"properties":{
							"payer_total":{
								"x-keyPath":"amount.payer_total",
								"x-id":"79l14lmw",
								"title":"payer_total",
								"type":"number"
							},
							"settlement_total":{
								"x-keyPath":"amount.settlement_total",
								"x-id":"shn3arae",
								"title":"settlement_total",
								"type":"number"
							},
							"total":{
								"x-keyPath":"amount.total",
								"x-id":"foahk38c",
								"title":"total",
								"type":"number"
							},
							"payer_refund":{
								"x-keyPath":"amount.payer_refund",
								"x-id":"qqr5wny2",
								"title":"payer_refund",
								"type":"number"
							},
							"refund_fee":{
								"x-keyPath":"amount.refund_fee",
								"x-id":"gsmcx6go",
								"title":"refund_fee",
								"type":"number"
							},
							"discount_refund":{
								"x-keyPath":"amount.discount_refund",
								"x-id":"ly1wic3y",
								"title":"discount_refund",
								"type":"number"
							},
							"currency":{
								"x-keyPath":"amount.currency",
								"x-id":"6oswcbax",
								"title":"currency",
								"type":"string"
							},
							"from":{
								"x-keyPath":"amount.from",
								"x-id":"ddup4f1i",
								"title":"from",
								"type":"array",
								"items":{
									"x-keyPath":"$item",
									"x-id":"dw2r6uw7",
									"title":"value",
									"type":"string"
								}
							},
							"settlement_refund":{
								"x-keyPath":"amount.settlement_refund",
								"x-id":"5zqbyj09",
								"title":"settlement_refund",
								"type":"number"
							},
							"refund":{
								"x-keyPath":"amount.refund",
								"x-id":"0l84vwp2",
								"title":"refund",
								"type":"number"
							}
						}
					},
					"out_trade_no":{
						"x-keyPath":"out_trade_no",
						"x-id":"kft7i864",
						"title":"out_trade_no",
						"type":"string"
					},
					"create_time":{
						"x-keyPath":"create_time",
						"x-id":"7n7sti4j",
						"title":"create_time",
						"type":"string"
					},
					"promotion_detail":{
						"x-keyPath":"promotion_detail",
						"x-id":"x9z7s053",
						"title":"promotion_detail",
						"type":"array",
						"items":{
							"x-keyPath":"$item",
							"x-id":"cb67iaqa",
							"title":"value",
							"type":"string"
						}
					},
					"out_refund_no":{
						"x-keyPath":"out_refund_no",
						"x-id":"mrgzgsaw",
						"title":"out_refund_no",
						"type":"string"
					},
					"funds_account":{
						"x-keyPath":"funds_account",
						"x-id":"3o8w3djf",
						"title":"funds_account",
						"type":"string"
					},
					"channel":{
						"x-keyPath":"channel",
						"x-id":"0zzwrkwd",
						"title":"channel",
						"type":"string"
					},
					"success_time":{
						"x-keyPath":"success_time",
						"x-id":"glzze9yv",
						"title":"success_time",
						"type":"string"
					},
					"user_received_account":{
						"x-keyPath":"user_received_account",
						"x-id":"3dnv4brc",
						"title":"user_received_account",
						"type":"string"
					},
					"refund_id":{
						"x-keyPath":"refund_id",
						"x-id":"kdzi35iv",
						"title":"refund_id",
						"type":"string"
					},
					"status":{
						"x-keyPath":"status",
						"x-id":"qwxtrpwt",
						"title":"status",
						"type":"string"
					}
				}
			},
			"uuid":"2e330d5e-6a09-4898-9941-c68d22b5286f",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":false,
						"x-id":"a593a0d",
						"name":"transaction_id",
						"title":"微信支付订单号",
						"type":"string"
					},
					"reason":{
						"x-required":false,
						"x-id":"9365274",
						"name":"reason",
						"title":"退款原因",
						"type":"string"
					},
					"amount":{
						"x-required":true,
						"x-id":"7a805a8",
						"name":"amount",
						"title":"金额信息",
						"type":"object",
						"list":[
							{
								"x-required":true,
								"x-keyPath":"",
								"x-id":"65ea3b9",
								"format":"",
								"name":"currency",
								"description":"符合ISO 4217标准的三位字母代码，目前只支持人民币：CNY。\n示例值：CNY",
								"pId":"7a805a8",
								"type":"string",
								"x-index":2,
								"title":"退款币种",
								"x-unique":false,
								"maxLength":4000
							},
							{
								"x-required":true,
								"x-id":"ae4ef43",
								"name":"refund",
								"pId":"7a805a8",
								"title":"退款金额",
								"type":"number"
							},
							{
								"x-required":false,
								"x-id":"bcdf06f",
								"name":"from",
								"pId":"7a805a8",
								"title":"退款出资账户及金额",
								"type":"array",
								"list":[
									{
										"x-required":true,
										"x-id":"87724ba",
										"name":"account",
										"pId":"bcdf06f",
										"title":"出资账户类型",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a41f529",
										"name":"amount",
										"pId":"bcdf06f",
										"title":"出资金额",
										"type":"number"
									}
								],
								"items":{
									"x-required":false,
									"type":"object",
									"properties":{
										"amount":{
											"x-required":true,
											"x-id":"a41f529",
											"name":"amount",
											"title":"出资金额",
											"type":"number"
										},
										"account":{
											"x-required":true,
											"x-id":"87724ba",
											"name":"account",
											"title":"出资账户类型",
											"type":"string"
										}
									},
									"required":[
										"account",
										"amount"
									]
								}
							},
							{
								"x-required":true,
								"x-id":"682593a",
								"name":"total",
								"pId":"7a805a8",
								"title":"原订单金额",
								"type":"number"
							}
						],
						"properties":{
							"total":{
								"x-required":true,
								"x-id":"682593a",
								"name":"total",
								"title":"原订单金额",
								"type":"number"
							},
							"from":{
								"x-required":false,
								"x-id":"bcdf06f",
								"name":"from",
								"title":"退款出资账户及金额",
								"type":"array",
								"list":[
									{
										"x-required":true,
										"x-id":"87724ba",
										"name":"account",
										"pId":"bcdf06f",
										"title":"出资账户类型",
										"type":"string"
									},
									{
										"x-required":true,
										"x-id":"a41f529",
										"name":"amount",
										"pId":"bcdf06f",
										"title":"出资金额",
										"type":"number"
									}
								],
								"items":{
									"x-required":false,
									"type":"object",
									"properties":{
										"amount":{
											"x-required":true,
											"x-id":"a41f529",
											"name":"amount",
											"title":"出资金额",
											"type":"number"
										},
										"account":{
											"x-required":true,
											"x-id":"87724ba",
											"name":"account",
											"title":"出资账户类型",
											"type":"string"
										}
									},
									"required":[
										"account",
										"amount"
									]
								}
							},
							"currency":{
								"x-required":true,
								"x-keyPath":"",
								"x-id":"65ea3b9",
								"format":"",
								"name":"currency",
								"description":"符合ISO 4217标准的三位字母代码，目前只支持人民币：CNY。\n示例值：CNY",
								"type":"string",
								"x-index":2,
								"title":"退款币种",
								"x-unique":false,
								"maxLength":4000
							},
							"refund":{
								"x-required":true,
								"x-id":"ae4ef43",
								"name":"refund",
								"title":"退款金额",
								"type":"number"
							}
						},
						"required":[
							"refund",
							"total"
						]
					},
					"out_trade_no":{
						"x-required":false,
						"x-id":"a8ec754",
						"name":"out_trade_no",
						"title":"商户订单号",
						"type":"string"
					},
					"out_refund_no":{
						"x-required":true,
						"x-id":"7a58a9a",
						"name":"out_refund_no",
						"title":"商户退款单号",
						"type":"string"
					},
					"funds_account":{
						"x-required":false,
						"x-id":"917d277",
						"name":"funds_account",
						"title":"退款资金来源",
						"type":"string"
					},
					"goods_detail":{
						"x-required":false,
						"x-id":"9e076fb",
						"name":"goods_detail",
						"title":"退款商品",
						"type":"array",
						"list":[
							{
								"x-required":false,
								"x-id":"a0602c9",
								"name":"goods_name",
								"pId":"9e076fb",
								"title":"商品名称",
								"type":"string"
							},
							{
								"x-required":false,
								"x-id":"78dfc51",
								"name":"wechatpay_goods_id",
								"pId":"9e076fb",
								"title":"微信支付商品编码",
								"type":"string"
							},
							{
								"x-required":true,
								"x-id":"6e24aef",
								"name":"merchant_goods_id",
								"pId":"9e076fb",
								"title":"商户侧商品编码",
								"type":"string"
							},
							{
								"x-required":true,
								"x-id":"ab0bced",
								"name":"refund_amount",
								"pId":"9e076fb",
								"title":"商品退款金额",
								"type":"number"
							},
							{
								"x-required":true,
								"x-id":"a0affba",
								"name":"unit_price",
								"pId":"9e076fb",
								"title":"商品单价",
								"type":"number"
							},
							{
								"x-required":true,
								"x-id":"afcca20",
								"name":"refund_quantity",
								"pId":"9e076fb",
								"title":"商品退货数量",
								"type":"number"
							}
						],
						"items":{
							"x-required":false,
							"type":"object",
							"properties":{
								"goods_name":{
									"x-required":false,
									"x-id":"a0602c9",
									"name":"goods_name",
									"title":"商品名称",
									"type":"string"
								},
								"wechatpay_goods_id":{
									"x-required":false,
									"x-id":"78dfc51",
									"name":"wechatpay_goods_id",
									"title":"微信支付商品编码",
									"type":"string"
								},
								"merchant_goods_id":{
									"x-required":true,
									"x-id":"6e24aef",
									"name":"merchant_goods_id",
									"title":"商户侧商品编码",
									"type":"string"
								},
								"refund_amount":{
									"x-required":true,
									"x-id":"ab0bced",
									"name":"refund_amount",
									"title":"商品退款金额",
									"type":"number"
								},
								"unit_price":{
									"x-required":true,
									"x-id":"a0affba",
									"name":"unit_price",
									"title":"商品单价",
									"type":"number"
								},
								"refund_quantity":{
									"x-required":true,
									"x-id":"afcca20",
									"name":"refund_quantity",
									"title":"商品退货数量",
									"type":"number"
								}
							},
							"required":[
								"merchant_goods_id",
								"refund_amount",
								"unit_price",
								"refund_quantity"
							]
						}
					}
				},
				"required":[
					"out_refund_no",
					"amount",
					"currency"
				]
			},
			"name":"refund",
			"calleeBody":{
				"method":"POST",
				"query":{
					"values":{
						"type":"object",
						"value":{},
						"key":"2387be55782182"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"transaction_id\": \"{{params.transaction_id}}\",\n  \"out_trade_no\": \"{{params.out_trade_no}}\",\n  \"out_refund_no\": \"{{params.out_refund_no}}\",\n  \"reason\": \"{{params.reason}}\",\n  \"notify_url\": \"{{vars.notifyUrlRefunds}}\",\n  \"funds_account\": \"{{params.funds_account}}\",\n  \"amount\": {{params.amount}},\n  \"currency\": \"{{params.currency}}\",\n  \"goods_detail\": {{params.goods_detail}}\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/refund/domestic/refunds"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"提交退款申请后，通过调用该接口查询退款状态。退款有一定延时，建议在提交退款申请后1分钟发起查询退款状态，一般来说零钱支付的退款5分钟内到账，银行卡支付的退款1-3个工作日到账。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_10.shtml",
			"type":"http",
			"title":"查询单笔退款",
			"outParams":{
				"x-keyPath":"",
				"x-id":"mx7ko99g",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"ha9p3id8",
						"title":"transaction_id",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"",
						"x-id":"f2pvechl",
						"title":"amount",
						"type":"object",
						"properties":{
							"payer_total":{
								"x-keyPath":"amount.payer_total",
								"x-id":"73s7baat",
								"title":"payer_total",
								"type":"number"
							},
							"settlement_total":{
								"x-keyPath":"amount.settlement_total",
								"x-id":"kybrs4b6",
								"title":"settlement_total",
								"type":"number"
							},
							"total":{
								"x-keyPath":"amount.total",
								"x-id":"fomnagov",
								"title":"total",
								"type":"number"
							},
							"payer_refund":{
								"x-keyPath":"amount.payer_refund",
								"x-id":"2qk18udx",
								"title":"payer_refund",
								"type":"number"
							},
							"refund_fee":{
								"x-keyPath":"amount.refund_fee",
								"x-id":"bo3liaaq",
								"title":"refund_fee",
								"type":"number"
							},
							"discount_refund":{
								"x-keyPath":"amount.discount_refund",
								"x-id":"2vst6zt3",
								"title":"discount_refund",
								"type":"number"
							},
							"currency":{
								"x-keyPath":"amount.currency",
								"x-id":"t91hs0kb",
								"title":"currency",
								"type":"string"
							},
							"from":{
								"x-keyPath":"amount.from",
								"x-id":"bcagbpoj",
								"title":"from",
								"type":"array",
								"items":{
									"x-keyPath":"$item",
									"x-id":"v9qhe6kf",
									"title":"value",
									"type":"string"
								}
							},
							"settlement_refund":{
								"x-keyPath":"amount.settlement_refund",
								"x-id":"d8fze7ry",
								"title":"settlement_refund",
								"type":"number"
							},
							"refund":{
								"x-keyPath":"amount.refund",
								"x-id":"te627uve",
								"title":"refund",
								"type":"number"
							}
						}
					},
					"out_trade_no":{
						"x-keyPath":"out_trade_no",
						"x-id":"hryj19fr",
						"title":"out_trade_no",
						"type":"string"
					},
					"create_time":{
						"x-keyPath":"create_time",
						"x-id":"pi8v8w8c",
						"title":"create_time",
						"type":"string"
					},
					"promotion_detail":{
						"x-keyPath":"promotion_detail",
						"x-id":"fdbojfv1",
						"title":"promotion_detail",
						"type":"array",
						"items":{
							"x-keyPath":"$item",
							"x-id":"e31qihr0",
							"title":"value",
							"type":"string"
						}
					},
					"out_refund_no":{
						"x-keyPath":"out_refund_no",
						"x-id":"zp4lp60b",
						"title":"out_refund_no",
						"type":"string"
					},
					"funds_account":{
						"x-keyPath":"funds_account",
						"x-id":"kq1kx6to",
						"title":"funds_account",
						"type":"string"
					},
					"channel":{
						"x-keyPath":"channel",
						"x-id":"uggwa6ae",
						"title":"channel",
						"type":"string"
					},
					"success_time":{
						"x-keyPath":"success_time",
						"x-id":"wm8ykfha",
						"title":"success_time",
						"type":"string"
					},
					"user_received_account":{
						"x-keyPath":"user_received_account",
						"x-id":"tykejz29",
						"title":"user_received_account",
						"type":"string"
					},
					"refund_id":{
						"x-keyPath":"refund_id",
						"x-id":"e72t4hc5",
						"title":"refund_id",
						"type":"string"
					},
					"status":{
						"x-keyPath":"status",
						"x-id":"01jj6z0g",
						"title":"status",
						"type":"string"
					}
				}
			},
			"uuid":"420e7eaf-2d38-4cde-addf-c57b59fce2ab",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"out_refund_no":{
						"x-required":true,
						"x-id":"7e4ae6e",
						"name":"out_refund_no",
						"title":"商户退款单号",
						"type":"string"
					}
				},
				"required":[
					"out_refund_no"
				]
			},
			"name":"queryRefund",
			"calleeBody":{
				"method":"GET",
				"query":{
					"values":{
						"type":"object",
						"value":{},
						"key":"26a87b206815ca"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/refund/domestic/refunds/{{params.out_refund_no}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"微信支付按天提供交易账单文件，商户可以通过该接口获取账单文件的下载地址。文件内包含交易相关的金额、时间、营销等信息，供商户核对订单、退款、银行到账等情况。\n注意：\n• 微信侧未成功下单的交易不会出现在对账单中。支付成功后撤销的交易会出现在对账单中，跟原支付单订单号一致；\n\n• 对账单中涉及金额的字段单位为“元”；\n\n• 对账单接口只能下载三个月以内的账单。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_6.shtml",
			"type":"http",
			"title":"申请交易账单",
			"outParams":{
				"x-keyPath":"",
				"x-id":"ltxic790",
				"title":"value",
				"type":"object",
				"properties":{
					"nonce_str":{
						"x-keyPath":"nonce_str",
						"x-id":"mgzlawyh",
						"title":"nonce_str",
						"type":"string"
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"zrhdcfut",
						"title":"mchid",
						"type":"string"
					},
					"signature":{
						"x-keyPath":"signature",
						"x-id":"izwqs9su",
						"title":"signature",
						"type":"string"
					},
					"download_url":{
						"x-keyPath":"download_url",
						"x-id":"zngfffvw",
						"title":"download_url",
						"type":"string"
					},
					"hash_value":{
						"x-keyPath":"hash_value",
						"x-id":"tqq08jpk",
						"title":"hash_value",
						"type":"string"
					},
					"serial_no":{
						"x-keyPath":"serial_no",
						"x-id":"3df84rx5",
						"title":"serial_no",
						"type":"string"
					},
					"hash_type":{
						"x-keyPath":"hash_type",
						"x-id":"syc9mk1y",
						"title":"hash_type",
						"type":"string"
					},
					"timestamp":{
						"x-keyPath":"timestamp",
						"x-id":"34cq6u2c",
						"title":"timestamp",
						"type":"number"
					}
				}
			},
			"uuid":"b030829f-ef2a-4e09-8146-47a68f7edf5e",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"bill_date":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9e5ea1d",
						"name":"bill_date",
						"format":"",
						"isEnum":false,
						"description":"",
						"title":"账单日期",
						"type":"string",
						"x-index":4,
						"x-unique":false,
						"maxLength":4000
					},
					"bill_type":{
						"x-required":false,
						"x-id":"a097c83",
						"name":"bill_type",
						"title":"账单类型",
						"type":"string"
					},
					"tar_type":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"7421a85",
						"format":"",
						"description":"不填则默认是数据流\n枚举值：\nGZIP：返回格式为.gzip的压缩包账单",
						"type":"string",
						"x-index":2,
						"title":"压缩类型",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"tradebill",
			"calleeBody":{
				"method":"GET",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"bill_date":"{{params.bill_date}}",
							"bill_type":"{{params.bill_type}}",
							"tar_type":"{{params.tar_type}}"
						},
						"key":"2e99d86c1aa0de"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/bill/tradebill"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"微信支付按天提供微信支付账户的资金流水账单文件，商户可以通过该接口获取账单文件的下载地址。文件内包含该账户资金操作相关的业务单号、收支金额、记账时间等信息，供商户进行核对。\n注意：\n• 资金账单中的数据反映的是商户微信支付账户资金变动情况；\n\n• 对账单中涉及金额的字段单位为“元”。\nhttps://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_5_7.shtml",
			"type":"http",
			"title":"申请资金账单",
			"outParams":{
				"x-keyPath":"",
				"x-id":"u6z5317f",
				"title":"value",
				"type":"object",
				"properties":{
					"nonce_str":{
						"x-keyPath":"nonce_str",
						"x-id":"0bbpknx3",
						"title":"nonce_str",
						"type":"string"
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"k8lnw0ia",
						"title":"mchid",
						"type":"string"
					},
					"signature":{
						"x-keyPath":"signature",
						"x-id":"8yeu0now",
						"title":"signature",
						"type":"string"
					},
					"download_url":{
						"x-keyPath":"download_url",
						"x-id":"fmn0eeox",
						"title":"download_url",
						"type":"string"
					},
					"hash_value":{
						"x-keyPath":"hash_value",
						"x-id":"xc9s7wfe",
						"title":"hash_value",
						"type":"string"
					},
					"serial_no":{
						"x-keyPath":"serial_no",
						"x-id":"ok5cf3zo",
						"title":"serial_no",
						"type":"string"
					},
					"hash_type":{
						"x-keyPath":"hash_type",
						"x-id":"kbdzgfyd",
						"title":"hash_type",
						"type":"string"
					},
					"timestamp":{
						"x-keyPath":"timestamp",
						"x-id":"zf539is8",
						"title":"timestamp",
						"type":"number"
					}
				}
			},
			"uuid":"cbf87101-f728-48c0-9de4-d67f8204e828",
			"intent":"create",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"type":"object",
				"properties":{
					"account_type":{
						"x-required":false,
						"x-id":"8d4a0d2",
						"name":"account_type",
						"title":"资金账户类型",
						"type":"string"
					},
					"bill_date":{
						"x-required":true,
						"x-id":"b78cf72",
						"name":"bill_date",
						"title":"账单日期",
						"type":"string"
					},
					"tar_type":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"9dc21c4",
						"format":"",
						"name":"tar_type",
						"description":"不填则默认是数据流\n枚举值：\nGZIP：返回格式为.gzip的压缩包账单\n示例值：GZIP",
						"isEnum":false,
						"type":"string",
						"x-index":2,
						"title":"压缩类型",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[
					"bill_date"
				]
			},
			"name":"fundflowbill",
			"calleeBody":{
				"method":"GET",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"account_type":"{{params.account_type}}",
							"bill_date":"{{params.bill_date}}",
							"tar_type":"{{params.tar_type}}"
						},
						"key":"42f87755978d74"
					}
				},
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&amp;per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/bill/fundflowbill"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"微信订单支付成功后，商户发起分账请求，将结算后的资金分到分账接收方",
			"title":"请求分账",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"7nuxq09h",
				"title":"value",
				"type":"object",
				"properties":{
					"orderId":{
						"x-keyPath":"orderId",
						"x-id":"nbfhicq9",
						"title":"orderId",
						"type":"string"
					},
					"receivers":{
						"x-keyPath":"receivers",
						"x-id":"6vj5yand",
						"title":"receivers",
						"type":"array",
						"items":{
							"x-keyPath":"",
							"x-id":"s8lb1ys7",
							"title":"value",
							"type":"object",
							"properties":{
								"result":{
									"x-keyPath":"$item.result",
									"x-id":"g69m0wbj",
									"title":"result",
									"type":"string"
								},
								"amount":{
									"x-keyPath":"$item.amount",
									"x-id":"vpih1wr4",
									"title":"amount",
									"type":"number"
								},
								"finishTime":{
									"x-keyPath":"$item.finishTime",
									"x-id":"jo3vvqex",
									"title":"finishTime",
									"type":"string"
								},
								"createTime":{
									"x-keyPath":"$item.createTime",
									"x-id":"yle5jrf9",
									"title":"createTime",
									"type":"string"
								},
								"description":{
									"x-keyPath":"$item.description",
									"x-id":"1h9n5mp1",
									"title":"description",
									"type":"string"
								},
								"detailId":{
									"x-keyPath":"$item.detailId",
									"x-id":"hoih3z2h",
									"title":"detailId",
									"type":"string"
								},
								"failReason":{
									"x-required":false,
									"x-keyPath":"$item.failReason",
									"x-id":"9621572",
									"format":"",
									"name":"failReason",
									"description":"",
									"type":"string",
									"x-index":2,
									"title":"failReason",
									"x-unique":false,
									"maxLength":4000
								},
								"type":{
									"x-keyPath":"$item.type",
									"x-id":"8z5ofbui",
									"title":"type",
									"type":"string"
								},
								"account":{
									"x-keyPath":"$item.account",
									"x-id":"s4g5tvbj",
									"title":"account",
									"type":"string"
								}
							}
						}
					},
					"state":{
						"x-keyPath":"state",
						"x-id":"vfx6lct8",
						"title":"state",
						"type":"string"
					},
					"outOrderNo":{
						"x-keyPath":"outOrderNo",
						"x-id":"ug5t8oe3",
						"title":"outOrderNo",
						"type":"string"
					},
					"transactionId":{
						"x-keyPath":"transactionId",
						"x-id":"x4nvxno6",
						"title":"transactionId",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"fccc496e-ff9d-448f-8f85-e254da0d6e22",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"631300b",
						"format":"",
						"description":"微信支付订单号\n示例值：4208450740201411110007820472",
						"type":"string",
						"x-index":2,
						"title":"微信订单号",
						"x-unique":false,
						"maxLength":4000
					},
					"unfreeze_unsplit":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"8097e89",
						"format":"",
						"description":"1、如果为true，该笔订单剩余未分账的金额会解冻回分账方商户；\n2、如果为false，该笔订单剩余未分账的金额不会解冻回分账方商户，可以对该笔订单再次进行分账。",
						"type":"boolean",
						"x-index":8,
						"title":"是否解冻剩余未分资金",
						"x-unique":false
					},
					"receivers":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"7a7a5ad",
						"format":"",
						"description":"分账接收方列表，可以设置出资商户作为分账接受方，最多可有50个分账接收方",
						"type":"array",
						"x-index":6,
						"title":"分账接收方列表",
						"items":{
							"format":"",
							"type":"object",
							"properties":{
								"amount":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"657694b",
									"format":"",
									"name":"amount",
									"description":"分账金额，单位为分，只能为整数，不能超过原订单支付金额及最大分账比例金额\n示例值：888",
									"type":"number",
									"x-index":6,
									"title":"分账金额",
									"x-unique":false
								},
								"name":{
									"x-required":false,
									"x-keyPath":"",
									"x-id":"67c5a8f",
									"format":"",
									"name":"name",
									"description":"可选项，在接收方类型为个人的时可选填，若有值，会检查与 name 是否实名匹配，不匹配会拒绝分账请求\n1、分账接收方类型是PERSONAL_OPENID，是个人姓名的密文（选传，传则校验） 此字段的加密方法详见：敏感信息加密说明\n2、使用微信支付平台证书中的公钥\n3、使用RSAES-OAEP算法进行加密\n4、将请求中HTTP头部的Wechatpay-Serial设置为证书序列号\n示例值：hu89ohu89ohu89o",
									"type":"string",
									"x-index":4,
									"title":"分账个人接收方姓名",
									"x-unique":false,
									"maxLength":4000
								},
								"description":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"b330ec8",
									"format":"",
									"name":"description",
									"description":"分账的原因描述，分账账单中需要体现\n示例值：分给商户A",
									"type":"string",
									"x-index":8,
									"title":"分账描述",
									"x-unique":false,
									"maxLength":4000
								},
								"type":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"9e9d0c9",
									"format":"",
									"name":"type",
									"description":"分账接收方账号：\n1、类型是MERCHANT_ID时，是商户号（mch_id或者sub_mch_id）\n2、类型是PERSONAL_OPENID时，是个人openid",
									"type":"string",
									"x-index":2,
									"title":"分账接收方类型",
									"x-unique":false,
									"maxLength":4000
								},
								"account":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"a6ff677",
									"format":"",
									"name":"account",
									"description":"分账接收方账号：\n1、类型是MERCHANT_ID时，是商户号（mch_id或者sub_mch_id）\n2、类型是PERSONAL_OPENID时，是个人openid\nopenid获取方法\n示例值：86693852",
									"type":"string",
									"x-index":10,
									"title":"分账接收方账号",
									"x-unique":false,
									"maxLength":4000
								}
							}
						},
						"x-unique":false
					},
					"out_order_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9f7cc74",
						"format":"",
						"description":"商户系统内部的分账单号，在商户系统内部唯一，同一分账单号多次请求等同一次。只能是数字、大小写字母_-|*@\n示例值：P20150806125346",
						"type":"string",
						"x-index":4,
						"title":"商户分账单号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"profitsharing_orders",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"appid\": \"{{vars.appid}}\",\n  \"transaction_id\": \"{{params.transaction_id}}\",\n  \"out_order_no\": \"{{params.out_order_no}}\",\n  \"receivers\": {{params.receivers}},\n  \"unfreeze_unsplit\": {{params.unfreeze_unsplit}}\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/orders"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"发起分账请求后，可调用此接口查询分账结果",
			"title":"查询分账结果",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"ni2255xj",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"e9wrymd9",
						"title":"transaction_id",
						"type":"string"
					},
					"receivers":{
						"x-keyPath":"receivers",
						"x-id":"uhmcyz36",
						"title":"receivers",
						"type":"array",
						"items":{
							"x-keyPath":"",
							"x-id":"gngr8moq",
							"title":"value",
							"type":"object",
							"properties":{
								"result":{
									"x-keyPath":"$item.result",
									"x-id":"n2v0avbf",
									"title":"result",
									"type":"string"
								},
								"amount":{
									"x-keyPath":"$item.amount",
									"x-id":"4xef3loz",
									"title":"amount",
									"type":"number"
								},
								"create_time":{
									"x-keyPath":"$item.create_time",
									"x-id":"6q3elwi6",
									"title":"create_time",
									"type":"string"
								},
								"description":{
									"x-keyPath":"$item.description",
									"x-id":"j4242aim",
									"title":"description",
									"type":"string"
								},
								"detail_id":{
									"x-keyPath":"$item.detail_id",
									"x-id":"evglumbd",
									"title":"detail_id",
									"type":"string"
								},
								"type":{
									"x-keyPath":"$item.type",
									"x-id":"gjqg4geb",
									"title":"type",
									"type":"string"
								},
								"fail_reason":{
									"x-required":false,
									"x-keyPath":"$item. fail_reason",
									"x-id":"6606d43",
									"format":"",
									"name":"fail_reason",
									"description":"分账失败原因，当分账结果result为CLOSED（已关闭）时，返回该字段\n枚举值：\n1、ACCOUNT_ABNORMAL：分账接收账户异常\n2、NO_RELATION：分账关系已解除\n3、RECEIVER_HIGH_RISK：高风险接收方\n4、RECEIVER_REAL_NAME_NOT_VERIFIED：接收方未实名\n5、NO_AUTH：分账权限已解除\n6、RECEIVER_RECEIPT_LIMIT：超出用户月收款限额\n7、PAYER_ACCOUNT_ABNORMAL：分出方账户异常\n8、INVALID_REQUEST: 描述参数设置失败\n示例值：ACCOUNT_ABNORMAL",
									"type":"string",
									"x-index":2,
									"title":"fail_reason",
									"x-unique":false,
									"maxLength":4000
								},
								"account":{
									"x-keyPath":"$item.account",
									"x-id":"lpw6f5vl",
									"title":"account",
									"type":"string"
								},
								"finish_time":{
									"x-keyPath":"$item.finish_time",
									"x-id":"fvwr3n2h",
									"title":"finish_time",
									"type":"string"
								}
							}
						}
					},
					"out_order_no":{
						"x-keyPath":"out_order_no",
						"x-id":"vsw9qfq5",
						"title":"out_order_no",
						"type":"string"
					},
					"state":{
						"x-keyPath":"state",
						"x-id":"cbdn951i",
						"title":"state",
						"type":"string"
					},
					"order_id":{
						"x-keyPath":"order_id",
						"x-id":"cmez7tzj",
						"title":"order_id",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"49c2c237-3aa5-4163-9773-4807aff4e0e4",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"b5eeeee",
						"format":"",
						"description":"微信支付订单号\n示例值：4208450740201411110007820472",
						"type":"string",
						"x-index":2,
						"title":"微信订单号",
						"x-unique":false,
						"maxLength":4000
					},
					"out_order_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"6ee57c7",
						"format":"",
						"description":"询分账结果，输入申请分账时的商户分账单号； 查询分账完结执行的结果，输入发起分账完结时的商户分账单号。\n示例值：P20150806125346",
						"type":"string",
						"x-index":4,
						"title":"商户分账单号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"queryProfitsharingByOutTradeNo",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"transaction_id":"{{params.transaction_id}}"
						},
						"key":"381e52c55a906a"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/orders/{{params.out_order_no}}"
			},
			"isCollapse":true
		},
		{
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"amount":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"7d9baf3",
						"format":"",
						"description":"要从分账接收方回退的金额，单位为分，只能为整数，不能超过原始分账单分出给该接收方的金额\n示例值：10",
						"type":"number",
						"x-index":10,
						"title":"回退金额",
						"x-unique":false
					},
					"out_order_no":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"9a395e8",
						"format":"",
						"description":"原发起分账请求时使用的商户系统内部的分账单号。微信分账单号与商户分账单号二选一填写\n示例值：P20150806125346",
						"type":"string",
						"x-index":4,
						"title":"商户分账单号",
						"x-unique":false,
						"maxLength":4000
					},
					"out_return_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"bc13703",
						"format":"",
						"description":"此回退单号是商户在自己后台生成的一个新的回退单号，在商户后台唯一\n示例值：R20190516001",
						"type":"string",
						"x-index":6,
						"title":"商户回退单号",
						"x-unique":false,
						"maxLength":4000
					},
					"description":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"6ecc33a",
						"format":"",
						"description":"账回退的原因描述\n示例值：用户退款",
						"type":"string",
						"x-index":12,
						"title":"回退描述",
						"x-unique":false,
						"maxLength":4000
					},
					"return_mchid":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"6f0485b",
						"format":"",
						"description":"分账接口中的分账接收方商户号\n示例值：86693852",
						"type":"string",
						"x-index":8,
						"title":"回退商户号",
						"x-unique":false,
						"maxLength":4000
					},
					"order_id":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"8f099a3",
						"format":"",
						"description":"微信分账单号，微信支付系统返回的唯一标识。\n示例值：3008450740201411110007820472",
						"type":"string",
						"x-index":2,
						"title":"微信分账单号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"isTitleInValid":false,
			"name":"profitsharingReturnOrders",
			"title":"请求分账回退",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"ql2w3xcg",
				"title":"value",
				"type":"object",
				"properties":{
					"result":{
						"x-keyPath":"result",
						"x-id":"4b773zmv",
						"title":"result",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"amount",
						"x-id":"3jjmv3g3",
						"title":"amount",
						"type":"number"
					},
					"create_time":{
						"x-keyPath":"create_time",
						"x-id":"pusm93l4",
						"title":"create_time",
						"type":"string"
					},
					"description":{
						"x-keyPath":"description",
						"x-id":"63v7w206",
						"title":"description",
						"type":"string"
					},
					"out_order_no":{
						"x-keyPath":"out_order_no",
						"x-id":"fgeaw1s5",
						"title":"out_order_no",
						"type":"string"
					},
					"out_return_no":{
						"x-keyPath":"out_return_no",
						"x-id":"g3fvtrwm",
						"title":"out_return_no",
						"type":"string"
					},
					"return_id":{
						"x-keyPath":"return_id",
						"x-id":"7xbkw6ho",
						"title":"return_id",
						"type":"string"
					},
					"return_mchid":{
						"x-keyPath":"return_mchid",
						"x-id":"a4qmcntk",
						"title":"return_mchid",
						"type":"string"
					},
					"fail_reason":{
						"x-required":false,
						"x-keyPath":"fail_reason",
						"x-id":"b0bd2c3",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"fail_reason",
						"x-unique":false,
						"maxLength":4000
					},
					"order_id":{
						"x-keyPath":"order_id",
						"x-id":"57d7y2w8",
						"title":"order_id",
						"type":"string"
					},
					"finish_time":{
						"x-keyPath":"finish_time",
						"x-id":"v3qdhdew",
						"title":"finish_time",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{{params}}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/return-orders"
			},
			"isCollapse":true,
			"uuid":"12848bd0-b009-4e6b-a8bd-251c21bb97df",
			"isNameInValid":false,
			"isShow":true
		},
		{
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"out_return_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"7d9659b",
						"format":"",
						"description":"调用回退接口提供的商户系统内部的回退单号\n示例值：R20190516001",
						"type":"string",
						"x-index":2,
						"title":"商户回退单号",
						"x-unique":false,
						"maxLength":4000
					},
					"out_order_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"8dd4021",
						"format":"",
						"description":"原发起分账请求时使用的商户系统内部的分账单号\n示例值：P20190806125346",
						"type":"string",
						"x-index":4,
						"title":"商户分账单号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"isTitleInValid":false,
			"name":"queryProfitsharingReturnOrders",
			"title":"查询分账回退结果",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"h2rtn2ml",
				"title":"value",
				"type":"object",
				"properties":{
					"result":{
						"x-keyPath":"result",
						"x-id":"e5q0ju9e",
						"title":"result",
						"type":"string"
					},
					"amount":{
						"x-keyPath":"amount",
						"x-id":"bnc6mcez",
						"title":"amount",
						"type":"number"
					},
					"create_time":{
						"x-keyPath":"create_time",
						"x-id":"3er62ix9",
						"title":"create_time",
						"type":"string"
					},
					"description":{
						"x-keyPath":"description",
						"x-id":"asrm9yrp",
						"title":"description",
						"type":"string"
					},
					"out_order_no":{
						"x-keyPath":"out_order_no",
						"x-id":"hboeonyy",
						"title":"out_order_no",
						"type":"string"
					},
					"out_return_no":{
						"x-keyPath":"out_return_no",
						"x-id":"c245mvs1",
						"title":"out_return_no",
						"type":"string"
					},
					"return_id":{
						"x-keyPath":"return_id",
						"x-id":"9s0xneta",
						"title":"return_id",
						"type":"string"
					},
					"return_mchid":{
						"x-keyPath":"return_mchid",
						"x-id":"omf722ym",
						"title":"return_mchid",
						"type":"string"
					},
					"fail_reason":{
						"x-required":false,
						"x-keyPath":"fail_reason",
						"x-id":"8eab02f",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"fail_reason",
						"x-unique":false,
						"maxLength":4000
					},
					"order_id":{
						"x-keyPath":"order_id",
						"x-id":"six3i353",
						"title":"order_id",
						"type":"string"
					},
					"finish_time":{
						"x-keyPath":"finish_time",
						"x-id":"gulc35u6",
						"title":"finish_time",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"out_order_no":"{{params.out_order_no}}"
						},
						"key":"2a524acaf4b354"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/return-orders/{{params.out_return_no}}"
			},
			"isCollapse":true,
			"uuid":"b1b25312-4648-4fbe-ae69-efca40766d83",
			"isNameInValid":false,
			"isShow":true
		},
		{
			"isTitleInValid":false,
			"description":"不需要进行分账的订单，可直接调用本接口将订单的金额全部解冻给本商户",
			"title":"解冻剩余资金",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"y70o8tsx",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"9kuzi4i2",
						"title":"transaction_id",
						"type":"string"
					},
					"receivers":{
						"x-keyPath":"receivers",
						"x-id":"io3b5r6q",
						"title":"receivers",
						"type":"array",
						"items":{
							"x-keyPath":"",
							"x-id":"y4xreuje",
							"title":"value",
							"type":"object",
							"properties":{
								"result":{
									"x-keyPath":"$item.result",
									"x-id":"3ewfc0db",
									"title":"result",
									"type":"string"
								},
								"amount":{
									"x-keyPath":"$item.amount",
									"x-id":"6yss66sb",
									"title":"amount",
									"type":"number"
								},
								"create_time":{
									"x-keyPath":"$item.create_time",
									"x-id":"un7tzpr4",
									"title":"create_time",
									"type":"string"
								},
								"description":{
									"x-keyPath":"$item.description",
									"x-id":"lk6tgsmc",
									"title":"description",
									"type":"string"
								},
								"detail_id":{
									"x-keyPath":"$item.detail_id",
									"x-id":"rlz1mfji",
									"title":"detail_id",
									"type":"string"
								},
								"type":{
									"x-keyPath":"$item.type",
									"x-id":"vowr8wu6",
									"title":"type",
									"type":"string"
								},
								"fail_reason":{
									"x-required":false,
									"x-keyPath":"$item.fail_reason",
									"x-id":"65250a4",
									"format":"",
									"name":"fail_reason",
									"description":"分账失败原因，当分账结果result为CLOSED（已关闭）时，返回该字段\n枚举值：\n1、ACCOUNT_ABNORMAL : 分账接收账户异常\n2、NO_RELATION : 分账关系已解除\n3、RECEIVER_HIGH_RISK : 高风险接收方\n4、RECEIVER_REAL_NAME_NOT_VERIFIED : 接收方未实名\n5、NO_AUTH : 分账权限已解除\n6、RECEIVER_RECEIPT_LIMIT : 接收方已达收款限额\n示例值：ACCOUNT_ABNORMAL",
									"type":"string",
									"x-index":2,
									"title":"fail_reason",
									"x-unique":false,
									"maxLength":4000
								},
								"account":{
									"x-keyPath":"$item.account",
									"x-id":"dbojnt0g",
									"title":"account",
									"type":"string"
								},
								"finish_time":{
									"x-keyPath":"$item.finish_time",
									"x-id":"dg3oln9r",
									"title":"finish_time",
									"type":"string"
								}
							}
						}
					},
					"out_order_no":{
						"x-keyPath":"out_order_no",
						"x-id":"jo24hxw7",
						"title":"out_order_no",
						"type":"string"
					},
					"state":{
						"x-keyPath":"state",
						"x-id":"virf5jyq",
						"title":"state",
						"type":"string"
					},
					"order_id":{
						"x-keyPath":"order_id",
						"x-id":"djv1qc0f",
						"title":"order_id",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"5333ec07-83b9-4a66-b6c0-7c768b9db899",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"8c96058",
						"format":"",
						"description":"微信支付订单号\n示例值：4208450740201411110007820472",
						"type":"string",
						"x-index":2,
						"title":"微信订单号",
						"x-unique":false,
						"maxLength":4000
					},
					"out_order_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"ab8babd",
						"format":"",
						"description":"商户系统内部的分账单号，在商户系统内部唯一，同一分账单号多次请求等同一次。只能是数字、大小写字母_-|*@\n示例值：P20150806125346",
						"type":"string",
						"x-index":4,
						"title":"商户分账单号",
						"x-unique":false,
						"maxLength":4000
					},
					"description":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"841a802",
						"format":"",
						"description":"账的原因描述，分账账单中需要体现\n示例值：解冻全部剩余资金",
						"type":"string",
						"x-index":6,
						"title":"分账描述",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"profitsharingOrdersUnfreeze",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{{params}}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/orders/unfreeze"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"可调用此接口查询订单剩余待分金额",
			"title":"查询剩余待分金额",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"dm3x5xxp",
				"title":"value",
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-keyPath":"transaction_id",
						"x-id":"u0lxkt0k",
						"title":"transaction_id",
						"type":"string"
					},
					"unsplit_amount":{
						"x-keyPath":"unsplit_amount",
						"x-id":"ys1pelif",
						"title":"unsplit_amount",
						"type":"number"
					}
				}
			},
			"intent":"create",
			"uuid":"48ac86bf-ada5-4e46-b314-b005a7a682cf",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"transaction_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"84236c2",
						"format":"",
						"description":"微信支付订单号\n示例值：4208450740201411110007820472",
						"type":"string",
						"x-index":2,
						"title":"微信订单号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"queryProfitsharingTransactions",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/transactions/{{params.transaction_id}}/amounts"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商户发起添加分账接收方请求，建立分账接收方列表。后续可通过发起分账请求，将分账方商户结算后的资金，分到该分账接收方",
			"title":"添加分账接收方",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"imzpclsr",
				"title":"value",
				"type":"object",
				"properties":{
					"relationType":{
						"x-keyPath":"relationType",
						"x-id":"9vd2kb61",
						"title":"relationType",
						"type":"string"
					},
					"customRelation":{
						"x-keyPath":"customRelation",
						"x-id":"eg2eivqc",
						"title":"customRelation",
						"type":"string"
					},
					"name":{
						"x-keyPath":"name",
						"x-id":"nyoeic03",
						"title":"name",
						"type":"string"
					},
					"type":{
						"x-keyPath":"type",
						"x-id":"qozqljxd",
						"title":"type",
						"type":"string"
					},
					"account":{
						"x-keyPath":"account",
						"x-id":"i3yhwjwn",
						"title":"account",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"31aa16ac-d416-4dd3-9d83-91d3cc2b7916",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"custom_relation":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"ba1f2d6",
						"format":"",
						"description":"子商户与接收方具体的关系，本字段最多10个字。\n当字段relation_type的值为CUSTOM时，本字段必填;\n当字段relation_type的值不为CUSTOM时，本字段无需填写。\n示例值：代理商",
						"type":"string",
						"x-index":10,
						"title":"自定义的分账关系",
						"x-unique":false,
						"maxLength":4000
					},
					"name":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"a5d0917",
						"format":"",
						"description":"分账接收方类型是MERCHANT_ID时，是商户全称（必传），当商户是小微商户或个体户时，是开户人姓名 分账接收方类型是PERSONAL_OPENID时，是个人姓名（选传，传则校验）\n1、此字段需要加密，加密方法详见：敏感信息加密说明\n2、使用微信支付平台证书中的公钥：获取平台证书\n3、使用RSAES-OAEP算法进行加密\n4、将请求中HTTP头部的Wechatpay-Serial设置为证书序列号\n示例值：hu89ohu89ohu89o",
						"type":"string",
						"x-index":6,
						"title":"分账个人接收方姓名",
						"x-unique":false,
						"maxLength":4000
					},
					"relation_type":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"ae9c816",
						"format":"",
						"description":"子商户与接收方的关系。 本字段值为枚举：\nSTORE：门店\nSTAFF：员工\nSTORE_OWNER：店主\nPARTNER：合作伙伴\nHEADQUARTER：总部\nBRAND：品牌方\nDISTRIBUTOR：分销商\nUSER：用户\nSUPPLIER： 供应商\nCUSTOM：自定义\n示例值：STORE",
						"type":"string",
						"x-index":8,
						"title":"与分账方的关系类型",
						"x-unique":false,
						"maxLength":4000
					},
					"type":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"ac42331",
						"format":"",
						"description":"枚举值：\nMERCHANT_ID：商户ID\nPERSONAL_OPENID：个人openid（由父商户APPID转换得到）\n示例值：MERCHANT_ID",
						"type":"string",
						"x-index":2,
						"title":"分账接收方类型",
						"x-unique":false,
						"maxLength":4000
					},
					"account":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"93a24e3",
						"format":"",
						"description":"型是MERCHANT_ID时，是商户号\n类型是PERSONAL_OPENID时，是个人openid\nopenid获取方法\n示例值：86693852",
						"type":"string",
						"x-index":4,
						"title":"分账接收方账号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"addProfitsharingReceivers",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"appid\": \"{{vars.appid}}\",\n  \"type\": \"{{params.type}}\",\n  \"account\": \"{{params.account}}\",\n  \"name\": \"{{params.name}}\",\n  \"relation_type\": \"{{params.relation_type}}\",\n  \"custom_relation\": \"{{params.custom_relation}}\"\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/receivers/add"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商户发起删除分账接收方请求。删除后，不支持将分账方商户结算后的资金，分到该分账接收方",
			"title":"删除分账接收方",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"fzplnriq",
				"title":"value",
				"type":"object",
				"properties":{
					"type":{
						"x-keyPath":"type",
						"x-id":"4oqiu65w",
						"title":"type",
						"type":"string"
					},
					"account":{
						"x-keyPath":"account",
						"x-id":"pp0xx0dx",
						"title":"account",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"d2e8fe30-2f49-4862-a1f3-bff7a29b6814",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"type":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"a25cf4c",
						"format":"",
						"description":"枚举值：\nMERCHANT_ID：商户ID\nPERSONAL_OPENID：个人openid（由父商户APPID转换得到）\n示例值：MERCHANT_ID",
						"type":"string",
						"x-index":2,
						"title":"分账接收方类型",
						"x-unique":false,
						"maxLength":4000
					},
					"account":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"6c79749",
						"format":"",
						"description":"类型是MERCHANT_ID时，是商户号\n类型是PERSONAL_OPENID时，是个人openid\nopenid获取方法\n示例值：86693852",
						"type":"string",
						"x-index":4,
						"title":"分账接收方账号",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"deleteProfitsharingReceivers",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"appid\": \"{{vars.appid}}\",\n  \"type\": \"{{params.type}}\",\n  \"account\": \"{{params.account}}\"\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/receivers/delete"
			},
			"isCollapse":true
		},
		{
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"bill_date":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"abc1036",
						"format":"",
						"description":"格式yyyy-MM-DD\n仅支持三个月内的账单下载申请。\n示例值：2019-06-11",
						"type":"string",
						"x-index":2,
						"title":"账单日期\t",
						"x-unique":false,
						"maxLength":4000
					},
					"tar_type":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"9465226",
						"format":"",
						"description":"不填则默认是数据流\n枚举值：\nGZIP：返回格式为.gzip的压缩包账单\n示例值：GZIP",
						"type":"string",
						"x-index":4,
						"title":"压缩类型",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"isTitleInValid":false,
			"name":"queryProfitsharingBills",
			"title":"申请分账账单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"gds4il9q",
				"title":"value",
				"type":"object",
				"properties":{
					"nonce_str":{
						"x-keyPath":"nonce_str",
						"x-id":"gjwt1vkh",
						"title":"nonce_str",
						"type":"string"
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"qp4nuvuz",
						"title":"mchid",
						"type":"string"
					},
					"signature":{
						"x-keyPath":"signature",
						"x-id":"eefl56ug",
						"title":"signature",
						"type":"string"
					},
					"download_url":{
						"x-keyPath":"download_url",
						"x-id":"e1p8qpdg",
						"title":"download_url",
						"type":"string"
					},
					"hash_value":{
						"x-keyPath":"hash_value",
						"x-id":"dy9mgifw",
						"title":"hash_value",
						"type":"string"
					},
					"serial_no":{
						"x-keyPath":"serial_no",
						"x-id":"lb16ifcm",
						"title":"serial_no",
						"type":"string"
					},
					"hash_type":{
						"x-keyPath":"hash_type",
						"x-id":"471qrv9l",
						"title":"hash_type",
						"type":"string"
					},
					"timestamp":{
						"x-keyPath":"timestamp",
						"x-id":"8wi185yj",
						"title":"timestamp",
						"type":"number"
					}
				}
			},
			"intent":"create",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"bill_date":"{{params.bill_date}}",
							"tar_type":"{{params.tar_type}}"
						},
						"key":"372a546fc30bfa"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/profitsharing/bills"
			},
			"isCollapse":true,
			"uuid":"5e4fe63f-28d8-4d38-9d1b-45391171e253",
			"isNameInValid":false,
			"isShow":true
		},
		{
			"isTitleInValid":false,
			"description":"发起商家转账接口。商户可以通过该接口同时向多个用户微信零钱进行转账操作。请求消息中应包含商家批次单号、转账名称、appid、转账总金额、转账总笔数、转账openid、收款用户姓名等信息。注意受理成功将返回批次单号，此时并不代表转账成功，请通过查单接口查询单据的付款状态\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/transfer-batch/initiate-batch-transfer.html",
			"title":"发起商家转账",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"a3sq52ef",
				"title":"value",
				"type":"object",
				"properties":{
					"outBatchNo":{
						"x-keyPath":"outBatchNo",
						"x-id":"ccexf1jz",
						"title":"outBatchNo",
						"type":"string"
					},
					"createTime":{
						"x-keyPath":"createTime",
						"x-id":"jzoiaupd",
						"title":"createTime",
						"type":"string"
					},
					"batchId":{
						"x-keyPath":"batchId",
						"x-id":"0yr0rqcp",
						"title":"batchId",
						"type":"string"
					},
					"batchStatus":{
						"x-keyPath":"batchStatus",
						"x-id":"jz5z13s8",
						"title":"batchStatus",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"2cbd0251-fe94-47ea-ad7a-829638b36784",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"batch_name":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"8868746",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":4,
						"title":"batch_name",
						"x-unique":false,
						"maxLength":4000
					},
					"transfer_detail_list":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9f956db",
						"format":"",
						"description":"",
						"type":"array",
						"x-index":12,
						"title":"transfer_detail_list",
						"items":{
							"format":"",
							"type":"object",
							"properties":{
								"transfer_amount":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"b3c0c24",
									"format":"",
									"name":"transfer_amount",
									"description":"",
									"type":"number",
									"x-index":4,
									"title":"transfer_amount",
									"x-unique":false
								},
								"openid":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"8771fc0",
									"format":"",
									"name":"openid",
									"description":"",
									"type":"string",
									"x-index":8,
									"title":"openid",
									"x-unique":false,
									"maxLength":4000
								},
								"user_name":{
									"x-keyPath":"",
									"x-id":"8b7b064",
									"format":"",
									"description":"",
									"isEnum":false,
									"pId":"9f956db",
									"type":"string",
									"x-index":10,
									"title":"user_name",
									"x-unique":false,
									"x-required":false,
									"name":"user_name",
									"maxLength":4000
								},
								"out_detail_no":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"8ea1f98",
									"format":"",
									"name":"out_detail_no",
									"description":"",
									"type":"string",
									"x-index":2,
									"title":"out_detail_no",
									"x-unique":false,
									"maxLength":4000
								},
								"transfer_remark":{
									"x-required":true,
									"x-keyPath":"",
									"x-id":"84aec40",
									"format":"",
									"name":"transfer_remark",
									"description":"",
									"type":"string",
									"x-index":6,
									"title":"transfer_remark",
									"x-unique":false,
									"maxLength":4000
								}
							}
						},
						"x-unique":false
					},
					"total_amount":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"84ae30d",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":8,
						"title":"total_amount",
						"x-unique":false
					},
					"total_num":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"abf7b0f",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":10,
						"title":"total_num",
						"x-unique":false
					},
					"out_batch_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"79039ce",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					},
					"batch_remark":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"a176a1b",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":6,
						"title":"batch_remark",
						"x-unique":false,
						"maxLength":4000
					},
					"transfer_scene_id":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"7debfc6",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":14,
						"title":"transfer_scene_id",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"batches",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{\n  \"appid\": \"{{vars.appid}}\",\n  \"out_batch_no\": \"{{params.out_batch_no}}\",\n  \"batch_name\": \"{{params.batch_name}}\",\n  \"batch_remark\": \"{{params.batch_remark}}\",\n  \"total_amount\": {{params.total_amount}},\n  \"total_num\": {{params.total_num}},\n  \"transfer_detail_list\": {{params.transfer_detail_list}},\n  \"transfer_scene_id\": \"{{params.transfer_scene_id}}\"\n}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/transfer/batches"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"微信批次单号查单接口。商户可以通过该接口查询转账批次单以及指定状态的转账明细单。返回消息中包含微信批次单号、批次状态、批次类型、转账总金额、转账总笔数、成功金额、失败金额等信息。\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/transfer-batch/get-transfer-batch-by-no.html",
			"title":"通过微信批次单号查询批次单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"xylkkujc",
				"title":"value",
				"type":"object",
				"properties":{
					"offset":{
						"x-keyPath":"offset",
						"x-id":"0v1qulys",
						"title":"offset",
						"type":"number"
					},
					"transfer_detail_list":{
						"x-keyPath":"transfer_detail_list",
						"x-id":"91h33kik",
						"title":"transfer_detail_list",
						"type":"array",
						"items":{
							"x-keyPath":"",
							"x-id":"oqplrdhf",
							"title":"value",
							"type":"object",
							"properties":{
								"detail_status":{
									"x-keyPath":"$item.detail_status",
									"x-id":"ip8f62yy",
									"title":"detail_status",
									"type":"string"
								},
								"out_detail_no":{
									"x-keyPath":"$item.out_detail_no",
									"x-id":"0v47bi41",
									"title":"out_detail_no",
									"type":"string"
								},
								"detail_id":{
									"x-keyPath":"$item.detail_id",
									"x-id":"toligoha",
									"title":"detail_id",
									"type":"string"
								}
							}
						}
					},
					"limit":{
						"x-keyPath":"limit",
						"x-id":"d063udym",
						"title":"limit",
						"type":"number"
					},
					"transfer_batch":{
						"x-keyPath":"",
						"x-id":"3yiatnci",
						"title":"transfer_batch",
						"type":"object",
						"properties":{
							"mchid":{
								"x-keyPath":"transfer_batch.mchid",
								"x-id":"a05z9r17",
								"title":"mchid",
								"type":"string"
							},
							"create_time":{
								"x-keyPath":"transfer_batch.create_time",
								"x-id":"1gjmo4yt",
								"title":"create_time",
								"type":"string"
							},
							"success_amount":{
								"x-keyPath":"transfer_batch.success_amount",
								"x-id":"fhz18dvb",
								"title":"success_amount",
								"type":"number"
							},
							"batch_id":{
								"x-keyPath":"transfer_batch.batch_id",
								"x-id":"8omafmul",
								"title":"batch_id",
								"type":"string"
							},
							"success_num":{
								"x-keyPath":"transfer_batch.success_num",
								"x-id":"0kch7k2l",
								"title":"success_num",
								"type":"number"
							},
							"batch_status":{
								"x-keyPath":"transfer_batch.batch_status",
								"x-id":"h15lx1m2",
								"title":"batch_status",
								"type":"string"
							},
							"out_batch_no":{
								"x-keyPath":"transfer_batch.out_batch_no",
								"x-id":"fa85p1mr",
								"title":"out_batch_no",
								"type":"string"
							},
							"batch_name":{
								"x-keyPath":"transfer_batch.batch_name",
								"x-id":"l2992dpz",
								"title":"batch_name",
								"type":"string"
							},
							"update_time":{
								"x-keyPath":"transfer_batch.update_time",
								"x-id":"zmf75mgz",
								"title":"update_time",
								"type":"string"
							},
							"fail_amount":{
								"x-keyPath":"transfer_batch.fail_amount",
								"x-id":"94nunai8",
								"title":"fail_amount",
								"type":"number"
							},
							"total_amount":{
								"x-keyPath":"transfer_batch.total_amount",
								"x-id":"dkz8q6h0",
								"title":"total_amount",
								"type":"number"
							},
							"appid":{
								"x-keyPath":"transfer_batch.appid",
								"x-id":"hdrr6fz7",
								"title":"appid",
								"type":"string"
							},
							"total_num":{
								"x-keyPath":"transfer_batch.total_num",
								"x-id":"1jbuafmc",
								"title":"total_num",
								"type":"number"
							},
							"batch_remark":{
								"x-keyPath":"transfer_batch.batch_remark",
								"x-id":"tz92aukf",
								"title":"batch_remark",
								"type":"string"
							},
							"batch_type":{
								"x-keyPath":"transfer_batch.batch_type",
								"x-id":"go0tswk2",
								"title":"batch_type",
								"type":"string"
							},
							"fail_num":{
								"x-keyPath":"transfer_batch.fail_num",
								"x-id":"55sow1sk",
								"title":"fail_num",
								"type":"number"
							},
							"transfer_scene_id":{
								"x-keyPath":"transfer_batch.transfer_scene_id",
								"x-id":"edfgzd7z",
								"title":"transfer_scene_id",
								"type":"string"
							}
						}
					}
				}
			},
			"intent":"create",
			"uuid":"e5885f26-6cec-417b-8848-96480c87223e",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"offset":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"81539be",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":4,
						"title":"offset",
						"x-unique":false
					},
					"batch_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"81d19b5",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":10,
						"title":"batch_id",
						"x-unique":false,
						"maxLength":4000
					},
					"detail_status":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"7bbe951",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":8,
						"title":"detail_status",
						"x-unique":false,
						"maxLength":4000
					},
					"limit":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"614c5af",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":6,
						"title":"limit",
						"x-unique":false
					},
					"need_query_detail":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"a6e05c8",
						"format":"",
						"description":"",
						"type":"boolean",
						"x-index":2,
						"title":"need_query_detail",
						"x-unique":false
					}
				},
				"required":[]
			},
			"name":"getTransferBatchByNo",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"offset":"{{params.offset}}",
							"detail_status":"{{params.detail_status}}",
							"limit":"{{params.limit}}",
							"need_query_detail":"{{params.need_query_detail}}"
						},
						"key":"28b0d79004d820"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer/batches/batch-id/{{params.batch_id}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商家明细单号查单接口。商户可以通过该接口查询转账批次单以及指定状态的转账明细单。返回消息中包含微信批次单号、批次状态、批次类型、转账总金额、转账总笔数、成功金额、失败金额等信息。\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/transfer-batch/get-transfer-batch-by-out-no.html",
			"title":"通过商家批次单号查询批次单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"tt8nxn1r",
				"title":"value",
				"type":"object",
				"properties":{
					"offset":{
						"x-keyPath":"offset",
						"x-id":"vni7cs5v",
						"title":"offset",
						"type":"number"
					},
					"transfer_detail_list":{
						"x-keyPath":"transfer_detail_list",
						"x-id":"sbkcbnjv",
						"title":"transfer_detail_list",
						"type":"array",
						"items":{
							"x-keyPath":"",
							"x-id":"7lm3ru2y",
							"title":"value",
							"type":"object",
							"properties":{
								"detail_status":{
									"x-keyPath":"$item.detail_status",
									"x-id":"zed3ksld",
									"title":"detail_status",
									"type":"string"
								},
								"out_detail_no":{
									"x-keyPath":"$item.out_detail_no",
									"x-id":"dc77u5w0",
									"title":"out_detail_no",
									"type":"string"
								},
								"detail_id":{
									"x-keyPath":"$item.detail_id",
									"x-id":"8kb5l2g6",
									"title":"detail_id",
									"type":"string"
								}
							}
						}
					},
					"limit":{
						"x-keyPath":"limit",
						"x-id":"je33724s",
						"title":"limit",
						"type":"number"
					},
					"transfer_batch":{
						"x-keyPath":"",
						"x-id":"vimse3se",
						"title":"transfer_batch",
						"type":"object",
						"properties":{
							"mchid":{
								"x-keyPath":"transfer_batch.mchid",
								"x-id":"gyr2ytxm",
								"title":"mchid",
								"type":"string"
							},
							"create_time":{
								"x-keyPath":"transfer_batch.create_time",
								"x-id":"p490sv00",
								"title":"create_time",
								"type":"string"
							},
							"success_amount":{
								"x-keyPath":"transfer_batch.success_amount",
								"x-id":"wb385p3t",
								"title":"success_amount",
								"type":"number"
							},
							"batch_id":{
								"x-keyPath":"transfer_batch.batch_id",
								"x-id":"3by4s5im",
								"title":"batch_id",
								"type":"string"
							},
							"success_num":{
								"x-keyPath":"transfer_batch.success_num",
								"x-id":"zshufuyy",
								"title":"success_num",
								"type":"number"
							},
							"batch_status":{
								"x-keyPath":"transfer_batch.batch_status",
								"x-id":"93wdtze6",
								"title":"batch_status",
								"type":"string"
							},
							"out_batch_no":{
								"x-keyPath":"transfer_batch.out_batch_no",
								"x-id":"iu7e75ki",
								"title":"out_batch_no",
								"type":"string"
							},
							"batch_name":{
								"x-keyPath":"transfer_batch.batch_name",
								"x-id":"vi6dhkcd",
								"title":"batch_name",
								"type":"string"
							},
							"update_time":{
								"x-keyPath":"transfer_batch.update_time",
								"x-id":"wnab9di0",
								"title":"update_time",
								"type":"string"
							},
							"fail_amount":{
								"x-keyPath":"transfer_batch.fail_amount",
								"x-id":"go67l68p",
								"title":"fail_amount",
								"type":"number"
							},
							"total_amount":{
								"x-keyPath":"transfer_batch.total_amount",
								"x-id":"bqj66si3",
								"title":"total_amount",
								"type":"number"
							},
							"appid":{
								"x-keyPath":"transfer_batch.appid",
								"x-id":"3rnhqim6",
								"title":"appid",
								"type":"string"
							},
							"total_num":{
								"x-keyPath":"transfer_batch.total_num",
								"x-id":"oiqtwxw5",
								"title":"total_num",
								"type":"number"
							},
							"batch_remark":{
								"x-keyPath":"transfer_batch.batch_remark",
								"x-id":"y0c9i9xk",
								"title":"batch_remark",
								"type":"string"
							},
							"batch_type":{
								"x-keyPath":"transfer_batch.batch_type",
								"x-id":"yknu39zm",
								"title":"batch_type",
								"type":"string"
							},
							"fail_num":{
								"x-keyPath":"transfer_batch.fail_num",
								"x-id":"sj1ttwvg",
								"title":"fail_num",
								"type":"number"
							},
							"transfer_scene_id":{
								"x-keyPath":"transfer_batch.transfer_scene_id",
								"x-id":"ne1syuzw",
								"title":"transfer_scene_id",
								"type":"string"
							}
						}
					}
				}
			},
			"intent":"create",
			"uuid":"13cd7de0-fb22-42c6-8755-026308f46303",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"offset":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"6662a0a",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":6,
						"title":"offset",
						"x-unique":false
					},
					"detail_status":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"9d42f89",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":10,
						"title":"detail_status",
						"x-unique":false,
						"maxLength":4000
					},
					"limit":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"64d95ca",
						"format":"",
						"description":"",
						"type":"number",
						"x-index":8,
						"title":"limit",
						"x-unique":false
					},
					"out_batch_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9253263",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					},
					"need_query_detail":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"61a442d",
						"format":"",
						"name":"need_query_detail",
						"description":"",
						"type":"boolean",
						"x-index":4,
						"title":"need_query_detail",
						"x-unique":false
					}
				},
				"required":[]
			},
			"name":"getTransferBatchByOutNo",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"offset":"{{params.offset}}",
							"detail_status":"{{params.detail_status}}",
							"limit":"{{params.limit}}",
							"need_query_detail":"{{params.need_query_detail}}"
						},
						"key":"2aa44492cd7fb8"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer/batches/out-batch-no/{{params.out_batch_no}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"明细单号查单接口。商户可以通过该接口查询单笔转账明细单。返回消息中包含微信明细单号、明细状态、转账金额、失败原因、收款用户姓名、用户OpenID等信息。\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/transfer-detail/get-transfer-detail-by-no.html",
			"title":"通过微信明细单号查询明细单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"smxwq5ol",
				"title":"value",
				"type":"object",
				"properties":{
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"h7np83rv",
						"title":"mchid",
						"type":"string"
					},
					"batch_id":{
						"x-keyPath":"batch_id",
						"x-id":"lmcxdq24",
						"title":"batch_id",
						"type":"string"
					},
					"openid":{
						"x-keyPath":"openid",
						"x-id":"vck93lbc",
						"title":"openid",
						"type":"string"
					},
					"user_name":{
						"x-keyPath":"user_name",
						"x-id":"sp5w432f",
						"title":"user_name",
						"type":"string"
					},
					"detail_status":{
						"x-keyPath":"detail_status",
						"x-id":"72sd20sm",
						"title":"detail_status",
						"type":"string"
					},
					"out_batch_no":{
						"x-keyPath":"out_batch_no",
						"x-id":"nlxsndyv",
						"title":"out_batch_no",
						"type":"string"
					},
					"detail_id":{
						"x-keyPath":"detail_id",
						"x-id":"61osy8r5",
						"title":"detail_id",
						"type":"string"
					},
					"update_time":{
						"x-keyPath":"update_time",
						"x-id":"3r1f3whu",
						"title":"update_time",
						"type":"string"
					},
					"transfer_amount":{
						"x-keyPath":"transfer_amount",
						"x-id":"6w0qxub9",
						"title":"transfer_amount",
						"type":"number"
					},
					"appid":{
						"x-keyPath":"appid",
						"x-id":"7upcnr5l",
						"title":"appid",
						"type":"string"
					},
					"out_detail_no":{
						"x-keyPath":"out_detail_no",
						"x-id":"il1ro4wy",
						"title":"out_detail_no",
						"type":"string"
					},
					"initiate_time":{
						"x-keyPath":"initiate_time",
						"x-id":"edwd70d9",
						"title":"initiate_time",
						"type":"string"
					},
					"fail_reason":{
						"x-required":false,
						"x-keyPath":"fail_reason",
						"x-id":"ac96286",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"fail_reason",
						"x-unique":false,
						"maxLength":4000
					},
					"transfer_remark":{
						"x-keyPath":"transfer_remark",
						"x-id":"0eg5p1u7",
						"title":"transfer_remark",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"c3a47123-5371-4f57-8703-bdb73890bb29",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"batch_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"bc9b069",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"batch_id",
						"x-unique":false,
						"maxLength":4000
					},
					"detail_id":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"999cd68",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":4,
						"title":"detail_id",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"getTransferDetailByNo",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer/batches/batch-id/{{params.batch_id}}/details/detail-id/{{params.detail_id}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"商户明细单号查单接口。商户可以通过该接口查询单笔转账明细单。返回消息中包含微信明细单号、明细状态、转账金额、失败原因、收款用户姓名、用户OpenID等信息。\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/transfer-detail/get-transfer-detail-by-out-no.html",
			"title":"通过商家明细单号查询明细单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"g0l9au6o",
				"title":"value",
				"type":"object",
				"properties":{
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"okgt0xbb",
						"title":"mchid",
						"type":"string"
					},
					"batch_id":{
						"x-keyPath":"batch_id",
						"x-id":"pbxuaj7i",
						"title":"batch_id",
						"type":"string"
					},
					"openid":{
						"x-keyPath":"openid",
						"x-id":"7newtddn",
						"title":"openid",
						"type":"string"
					},
					"user_name":{
						"x-keyPath":"user_name",
						"x-id":"j8cyumnz",
						"title":"user_name",
						"type":"string"
					},
					"detail_status":{
						"x-keyPath":"detail_status",
						"x-id":"7913nzbe",
						"title":"detail_status",
						"type":"string"
					},
					"out_batch_no":{
						"x-keyPath":"out_batch_no",
						"x-id":"spa1v7do",
						"title":"out_batch_no",
						"type":"string"
					},
					"detail_id":{
						"x-keyPath":"detail_id",
						"x-id":"a9prd6t9",
						"title":"detail_id",
						"type":"string"
					},
					"update_time":{
						"x-keyPath":"update_time",
						"x-id":"my5x22vs",
						"title":"update_time",
						"type":"string"
					},
					"transfer_amount":{
						"x-keyPath":"transfer_amount",
						"x-id":"rf1h7ub0",
						"title":"transfer_amount",
						"type":"number"
					},
					"appid":{
						"x-keyPath":"appid",
						"x-id":"8dom1t29",
						"title":"appid",
						"type":"string"
					},
					"out_detail_no":{
						"x-keyPath":"out_detail_no",
						"x-id":"fgo0etzt",
						"title":"out_detail_no",
						"type":"string"
					},
					"initiate_time":{
						"x-keyPath":"initiate_time",
						"x-id":"s7jzsgam",
						"title":"initiate_time",
						"type":"string"
					},
					"fail_reason":{
						"x-required":false,
						"x-keyPath":"fail_reason",
						"x-id":"a8a86b3",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"fail_reason",
						"x-unique":false,
						"maxLength":4000
					},
					"transfer_remark":{
						"x-keyPath":"transfer_remark",
						"x-id":"njoyhypc",
						"title":"transfer_remark",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"09d0c623-ba3c-44a4-a3f0-e6b68fa18713",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"out_detail_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"b422e3f",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"out_detail_no",
						"x-unique":false,
						"maxLength":4000
					},
					"out_batch_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"b85183a",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":4,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"getTransferDetailByOutNo",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer/batches/out-batch-no/{{params.out_batch_no}}/details/out-detail-no/{{params.out_detail_no}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"转账账单电子回单申请受理接口，商户通过该接口可以申请受理电子回单服务。 前置条件：1、发起转账时传入了收款用户姓名，支持申请电子回单；2、支持受理最近两年内的转账批次单；\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/electronic-signature/create-electronic-signature.html",
			"title":"转账账单电子回单申请受理接口",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"4vvy518f",
				"title":"value",
				"type":"object",
				"properties":{
					"update_time":{
						"x-keyPath":"update_time",
						"x-id":"7vvpdziy",
						"title":"update_time",
						"type":"string"
					},
					"create_time":{
						"x-keyPath":"create_time",
						"x-id":"x1ccomvi",
						"title":"create_time",
						"type":"string"
					},
					"signature_status":{
						"x-keyPath":"signature_status",
						"x-id":"qfjrsdzj",
						"title":"signature_status",
						"type":"string"
					},
					"signature_no":{
						"x-keyPath":"signature_no",
						"x-id":"hejl2jlp",
						"title":"signature_no",
						"type":"string"
					},
					"out_batch_no":{
						"x-keyPath":"out_batch_no",
						"x-id":"gl608k48",
						"title":"out_batch_no",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"f8ed7f8a-801f-40c3-83f0-43b1775f69c4",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"out_batch_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"b7d9bb7",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"billReceipt",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{{params}}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/transfer/bill-receipt"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"查询转账账单电子回单接口，商户通过该接口可以查询电子回单受理进度信息，包括电子回单据信息，电子回单文件的hash值，电子回单文件的下载地址等\nhttps://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/electronic-signature/get-electronic-signature-by-out-no.html",
			"title":"查询转账账单电子回单接口",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"1qm8l5sj",
				"title":"value",
				"type":"object",
				"properties":{
					"nonce_str":{
						"x-keyPath":"nonce_str",
						"x-id":"4htq38gl",
						"title":"nonce_str",
						"type":"string"
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"32by2vx8",
						"title":"mchid",
						"type":"string"
					},
					"signature":{
						"x-keyPath":"signature",
						"x-id":"ip410nr0",
						"title":"signature",
						"type":"string"
					},
					"download_url":{
						"x-keyPath":"download_url",
						"x-id":"pbfihrne",
						"title":"download_url",
						"type":"string"
					},
					"hash_value":{
						"x-keyPath":"hash_value",
						"x-id":"19kfupj1",
						"title":"hash_value",
						"type":"string"
					},
					"serial_no":{
						"x-keyPath":"serial_no",
						"x-id":"0rw74962",
						"title":"serial_no",
						"type":"string"
					},
					"hash_type":{
						"x-keyPath":"hash_type",
						"x-id":"cv0ua6x6",
						"title":"hash_type",
						"type":"string"
					},
					"timestamp":{
						"x-keyPath":"timestamp",
						"x-id":"p6oib1sg",
						"title":"timestamp",
						"type":"number"
					}
				}
			},
			"intent":"create",
			"uuid":"d6005092-bb06-4d2c-a096-ab697b345db2",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"out_batch_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"adc51cc",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"getBillReceipt",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer/bill-receipt/{{params.out_batch_no}}"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"受理转账明细电子回单接口，商户通过该接口可以申请受理转账明细单电子回单服务。 前置条件：1、发起转账时传入了收款用户姓名，支持申请电子回单；2、只支持受理最近两年内的转账明细单 URL路径：https://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/electronic-receipt-api/create-electronic-receipt.html",
			"title":"受理转账明细电子回单",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"lon2ejr1",
				"title":"value",
				"type":"object",
				"properties":{
					"signature_status":{
						"x-keyPath":"signature_status",
						"x-id":"ssuvbcw6",
						"title":"signature_status",
						"type":"string"
					},
					"accept_type":{
						"x-keyPath":"accept_type",
						"x-id":"s30qy8we",
						"title":"accept_type",
						"type":"string"
					},
					"signature_no":{
						"x-keyPath":"signature_no",
						"x-id":"5cxen6ab",
						"title":"signature_no",
						"type":"string"
					},
					"out_batch_no":{
						"x-keyPath":"out_batch_no",
						"x-id":"fcxxe217",
						"title":"out_batch_no",
						"type":"string"
					},
					"out_detail_no":{
						"x-keyPath":"out_detail_no",
						"x-id":"2dqod4s0",
						"title":"out_detail_no",
						"type":"string"
					}
				}
			},
			"intent":"create",
			"uuid":"98cf4ec6-94bd-4e93-b154-8c6b4606416e",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"accept_type":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9ada415",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":2,
						"title":"accept_type",
						"x-unique":false,
						"maxLength":4000
					},
					"out_batch_no":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"8642b12",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":4,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					},
					"out_detail_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"7068098",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":6,
						"title":"out_detail_no",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"electronicReceipts",
			"calleeBody":{
				"method":"POST",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"isUrlInValid":true,
				"body":{
					"values":{
						"type":"string",
						"value":"{{params}}",
						"key":"json"
					},
					"contentType":"json"
				},
				"url":"https://api.mch.weixin.qq.com/v3/transfer-detail/electronic-receipts"
			},
			"isCollapse":true
		},
		{
			"isTitleInValid":false,
			"description":"查询转账明细电子回单受理结果接口，商户通过该接口可以查询电子回单受理进度信息，包括电子回单据信息，电子回单文件的hash值，电子回单文件的下载地址等。 前置条件：只支持查询最近两年内的转账明细单 URL路径：https://pay.weixin.qq.com/docs/merchant/apis/batch-transfer-to-balance/electronic-receipt-api/query-electronic-receipt.html",
			"title":"查询转账明细电子回单受理结果",
			"type":"http",
			"outParams":{
				"x-keyPath":"",
				"x-id":"k04uqvj7",
				"title":"value",
				"type":"object",
				"properties":{
					"nonce_str":{
						"x-keyPath":"nonce_str",
						"x-id":"ja89o0z8",
						"title":"nonce_str",
						"type":"string"
					},
					"mchid":{
						"x-keyPath":"mchid",
						"x-id":"lkgqayh9",
						"title":"mchid",
						"type":"string"
					},
					"signature":{
						"x-keyPath":"signature",
						"x-id":"oyjnct7n",
						"title":"signature",
						"type":"string"
					},
					"download_url":{
						"x-keyPath":"download_url",
						"x-id":"92m5ayjs",
						"title":"download_url",
						"type":"string"
					},
					"hash_value":{
						"x-keyPath":"hash_value",
						"x-id":"czebjlf7",
						"title":"hash_value",
						"type":"string"
					},
					"serial_no":{
						"x-keyPath":"serial_no",
						"x-id":"daut0bcs",
						"title":"serial_no",
						"type":"string"
					},
					"hash_type":{
						"x-keyPath":"hash_type",
						"x-id":"0me3c2qd",
						"title":"hash_type",
						"type":"string"
					},
					"timestamp":{
						"x-keyPath":"timestamp",
						"x-id":"datg3sgy",
						"title":"timestamp",
						"type":"number"
					}
				}
			},
			"intent":"create",
			"uuid":"ac0bf7c5-e0dd-4a42-baa7-ce8355811f05",
			"isNameInValid":false,
			"isShow":true,
			"inParams":{
				"additionalProperties":true,
				"type":"object",
				"properties":{
					"accept_type":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"67e77f2",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":6,
						"title":"accept_type",
						"x-unique":false,
						"maxLength":4000
					},
					"out_batch_no":{
						"x-required":false,
						"x-keyPath":"",
						"x-id":"72b33ee",
						"format":"",
						"name":"out_batch_no",
						"description":"",
						"isEnum":false,
						"type":"string",
						"x-index":2,
						"title":"out_batch_no",
						"x-unique":false,
						"maxLength":4000
					},
					"out_detail_no":{
						"x-required":true,
						"x-keyPath":"",
						"x-id":"9512fd6",
						"format":"",
						"description":"",
						"type":"string",
						"x-index":4,
						"title":"out_detail_no",
						"x-unique":false,
						"maxLength":4000
					}
				},
				"required":[]
			},
			"name":"getElectronicReceipts",
			"calleeBody":{
				"method":"GET",
				"callee":"/**\n* 使用 npm 包 node-fetch 发送http请求, 详细使用文档可以参考\n*  https://github.com/node-fetch/node-fetch\n*/\nconst fetch = require('node-fetch');\n\nmodule.exports = async function (params, context) {\n  // 这里是方法入参\n  console.log(params);\n\n/**\n * 可以在这里编写业务逻辑，例如：\n * 1. 使用 node-fetch 通过 HTTP 方式请求外部数据，并对获取的数据进行加工；\n * 2. 使用 context.database API 来直接操作云开发云数据库；\n * 3. 使用 context.callModel 来操作其他数据模型数据；\n * 4. 使用 context.callConnector 来使用API；\n * 5. 使用 context.app.callFunction 来调用同环境的云开发云函数；\n */\n  const response = await fetch(`https://reqres.in/api/users?page=${params.page}&per_page=${params.per_page}`);\n  const result = await response.json();\n\n  // 这里返回数据，和出参结构映射\n  return result;\n};",
				"query":{
					"values":{
						"type":"object",
						"value":{
							"accept_type":"{{params.accept_type}}",
							"out_batch_no":"{{params.out_batch_no}}",
							"out_detail_no":"{{params.out_detail_no}}"
						},
						"key":"2734c0a2adfd40"
					}
				},
				"isUrlInValid":true,
				"url":"https://api.mch.weixin.qq.com/v3/transfer-detail/electronic-receipts"
			},
			"isCollapse":true
		}
	],
	"name":"wxpay_order_apis_4tp3344_ILXb",
	"pkgId":"beer-1g75udik38f745cf",
	"templateCode":"weixinpaydc",
	"title":"wxpay-微信支付APIs",
	"type":"cloud-integration",
	"version":"1.0"
}