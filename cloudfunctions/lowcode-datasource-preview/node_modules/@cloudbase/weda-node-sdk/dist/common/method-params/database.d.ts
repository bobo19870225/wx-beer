/**
 * 数据库数据源的辅助方法(用于数据源管理和低码IDE)
 */
import { IJsonSchemaObject, IJsonSchemaAny } from '@cloudbase/cals';
/** 数据源内置字段  */
export declare const INNER_FIELD_NAMES: string[];
/** 旧的内置方法名称 */
export declare const LEGACY_METHOD_NAMES: string[];
/**
 * @description: 过滤schema中不需要的字段
 * @param {IJsonSchemaObject} schema
 * @param {string[]} filterArr 需要过滤字段的集合
 * @return {*}
 */
export declare function filterSchema(schemaProperties: Record<string, IJsonSchemaAny>, filterFormatArr: string[]): Record<string, IJsonSchemaAny>;
/**
 * 获取数据库数据源默认方法的入参
 * @param field 数据库数据源字段结构
 * @param fnName 内置方法名称: getItem getList delete update create
 * @return 目前 fnName 为 getList 时返回为null
 */
export declare function getDbInParams(schema: IJsonSchemaObject, fnName: string): IJsonSchemaObject;
/**
 * 对字段的 properties 的 x-index 进行矫正: 按顺序排列并将 index 从 1 开始计数
 */
export declare function resortPropIndexes(properties: IJsonSchemaObject['properties']): {
    [k: string]: IJsonSchemaAny;
};
/**
 * 获取数据库数据源默认方法的出参
 * @param field 数据库数据源字段结构
 * @param fnName 内置方法名称: getItem getList delete update create
 */
export declare function getDbOutParams(schema: IJsonSchemaObject, fnName: string): IJsonSchemaAny;
