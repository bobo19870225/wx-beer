"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.callScfMethod = void 0;
const common_1 = require("../common");
async function callScfMethod(params, context) {
    var _a, _b;
    try {
        const methodName = params.methodCfg.calleeBody.fnName;
        const response = await context.app.callFunction({
            name: methodName,
            data: params.params || {},
            // callFunction 默认超时时间为 15s, 在此延长至 60s
        }, { timeout: 60000 });
        if (response.code)
            throw new common_1.TCBError(`FnError.Scf${response.code}`, `${response.message}, requestId: ${response.requestId}`, {
                original: response,
            });
        return response.result;
    }
    catch (e) {
        if (e instanceof common_1.TCBError)
            throw e;
        let code = e.code || e.name;
        let message = e.message || '';
        if (code === 'FUNCTION_NOT_FOUND') {
            message = `找不到云开发云函数 ${(_b = (_a = params.methodCfg) === null || _a === void 0 ? void 0 : _a.calleeBody) === null || _b === void 0 ? void 0 : _b.fnName}`;
        }
        if (code) {
            code = `FnError.Scf.${code}`;
        }
        else {
            code = 'FnError.Scf';
        }
        throw new common_1.TCBError(code, `调用APIs云函数方法失败: ${message}`, {
            original: e,
        });
    }
}
exports.callScfMethod = callScfMethod;
