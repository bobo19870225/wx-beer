"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageModule = void 0;
const cloudbase_1 = require("./cloudbase");
class PageModule {
    constructor(moduleName, options) {
        this.inited = false;
        if (moduleName) {
            this.init(moduleName, options);
        }
    }
    init(moduleName, options = {}) {
        if (this.inited) {
            throw new Error('[ERROR]PageModule has already been inited, do not repeat initialization.');
        }
        this.moduleName = `${moduleName}`;
        this.env = `$:${moduleName}`;
        this.initCloudbaseInstance(this.env, options.cloudbaseInstanceInitOptions);
        this.inited = true;
        return this;
    }
    callMethod(methodName, data, options = {}) {
        this.checkInited();
        return this.cloudbaseInstance.callFunction({
            name: methodName,
            data: {
                ...options,
                moduleName: this.moduleName,
                envType: options.envType || 'prod',
                // 数据源参数放到 params 中
                params: data,
            },
        });
    }
    database() {
        return this.cloudbaseInstance.database();
    }
    uploadFile(options) {
    }
    deleteFile(options) {
    }
    downloadFile(options) {
    }
    getTempFileURL(options) {
    }
    initCloudbaseInstance(env, options = {}) {
        this.cloudbaseInstance = (0, cloudbase_1.initCloudbaseInstance)(env, options);
    }
    checkInited() {
        if (!this.inited) {
            throw new Error('[ERROR]PageModule is not inited, please call `init()` method first.');
        }
    }
}
exports.PageModule = PageModule;
