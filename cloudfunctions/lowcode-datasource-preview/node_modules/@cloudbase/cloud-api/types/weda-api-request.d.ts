interface ICredentials {
    secretId: string;
    secretKey: string;
    sessionToken: string;
}
/**
 * 请求参数
 */
export interface IWedaRequestParams {
    /** 请求方法 */
    action: string;
    /**
     * 认证信息
     *  在tcb云函数中可通过 tcb.getCloudbaseContext 返回的环境变量获取相关信息:
     *    TENCENTCLOUD_SECRETID
     *    TENCENTCLOUD_SECRETKEY
     *    TENCENTCLOUD_SESSIONTOKEN
     */
    credentials: ICredentials | (() => Promise<ICredentials>);
    /** 环境ID */
    envId: string;
    /**
     * 客户端IP地址, 方便后端进行统计, 无可不传
     *  在tcb云函数中可通过 tcb.getCloudbaseContext 返回的 WX_CLIENTIP(微信侧) TCB_SOURCE_IP(云开发侧)拿到客户端IP地址
     *  详细文档 https://docs.cloudbase.net/api-reference/server/node-sdk/env.html#getcloudbasecontext
     */
    clientIp?: string;
    /**
     * 自定义请求ID, 方便前后端调试, 无可不传
     *  在tcb 云函数中, 若可以保证前端一次云函数调用, 只向weda后端发起一次请求, 这可以通过 tcb.parseContext 拿到云函数的请求 request_id 并复用该ID
     *    若不能保证上述条件, 则不要复用云函数请求ID, 否则导致请求链路出问题难以定位
     *  详细文档 https://docs.cloudbase.net/api-reference/server/node-sdk/env.html#parsecontext
     */
    requestId?: string;
    /**
     * 调用的weda环境类型
     *  预览-pre，正式-prod
     */
    envType: 'pre' | 'prod';
    /** 用户ID */
    uid: string;
    /**
     * uid 类型, 1.tcb 2.微信 3.企业微信 4.weda内部
     */
    source: 1 | 2 | 3 | 4;
    /**
     * 方法的其他参数
     */
    data?: Record<string, any>;
}
/**
 * 请求额外配置
 */
export interface IWedaConfig {
    /** 请求的接口地址, 默认 'https://gateway.weda.tencent-cloud.com/wedaapi' */
    url: string;
    /**
     * 请求目标, 与 url 意义类似, 但可通过设置为 prod/pre 来指定地址, **优先使用 target**
     * 可以是下边三个值
     *  'prod' 正式地址
     *  'pre' 预发地址
     *  'demo' 体验地址
     *  url 任意一个url
     */
    target?: string;
    /**
     * 调用的服务类型, 默认 runtime. 配合 target 会调用到不同的接口 url 地址
     *   runtime: 运行态接口
     *   design: 设计态接口
     */
    serviceType?: 'runtime' | 'design';
    /** 请求方法, 默认 POST */
    method: string;
    /** 额外的自定义头 */
    headers?: Record<string, any>;
    /** 自定义http代理地址 */
    proxy?: string;
    /** 自定义日志处理函数 */
    logger?: (...args: any[]) => void;
}
export declare function wedaRequest(params: IWedaRequestParams, config?: Partial<IWedaConfig>): Promise<any>;
export {};
