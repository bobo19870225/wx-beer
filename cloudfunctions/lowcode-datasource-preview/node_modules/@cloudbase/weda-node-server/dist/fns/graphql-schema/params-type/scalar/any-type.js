"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLAny = void 0;
const graphql_1 = require("graphql");
const weda_node_sdk_1 = require("@cloudbase/weda-node-sdk");
// eslint-disable-next-line @typescript-eslint/naming-convention
exports.GraphQLAny = new graphql_1.GraphQLScalarType({
    name: 'Any',
    description: 'Any value.',
    parseValue: value => value,
    parseLiteral,
    serialize: value => value,
});
function parseLiteral(ast) {
    switch (ast.kind) {
        case graphql_1.Kind.BOOLEAN:
        case graphql_1.Kind.STRING:
            return ast.value;
        case graphql_1.Kind.INT:
        case graphql_1.Kind.FLOAT:
            return Number(ast.value);
        case graphql_1.Kind.LIST:
            return ast.values.map(parseLiteral);
        case graphql_1.Kind.OBJECT:
            return ast.fields.reduce((accumulator, field) => {
                accumulator[field.name.value] = parseLiteral(field.value);
                return accumulator;
            }, {});
        case graphql_1.Kind.NULL:
            return null;
        default:
            throw new weda_node_sdk_1.TCBError('GLError.UnsupportedDataType', `GraphQL的Any类型不支持 ${ast.kind}`, {
                reason: `Unexpected kind in parseLiteral: ${ast.kind}, occurred in GraphQL AnyType \`parseLiteral\``,
            });
    }
}
