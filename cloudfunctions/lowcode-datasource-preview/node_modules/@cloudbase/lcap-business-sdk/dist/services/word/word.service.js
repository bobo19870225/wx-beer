"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WordService = void 0;
const inversify_1 = require("inversify");
const mint_filter_1 = __importDefault(require("mint-filter"));
const constants_1 = require("../../constants");
const mint = new mint_filter_1.default(constants_1.SENSITIVE_WORDS);
/**
 * NLP 语言处理
 */
let WordService = class WordService {
    /**
     * 过滤敏感词
     */
    async filterSensitive(text, opts) {
        const res = await mint.filter(text, opts);
        if (typeof res.text === 'string') {
            return res.text;
        }
        return '*'.repeat(text.length);
    }
};
WordService = __decorate([
    inversify_1.injectable()
], WordService);
exports.WordService = WordService;
